name: Update react-charting package

on:
  schedule:
    - cron: "30 8 * * *"  # Runs every day at 2:00 PM IST (02:30 AM UTC)
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  update-react-charting:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Get latest @fluentui/react-charting version
        id: get_latest_version
        run: |
          echo "version=$(npm view @fluentui/react-charting version)" >> $GITHUB_OUTPUT

      - name: Ensure jq is installed
        run: |
          if ! command -v jq &> /dev/null
          then
            sudo apt-get update
            sudo apt-get install -y jq
          fi

      - name: Get current @fluentui/react-charting version
        id: get_current_version
        run: |
          cd apps/plotly_examples
          echo "current_version=$(jq -r '.dependencies[\"@fluentui/react-charting\"]' package.json)" >> $GITHUB_OUTPUT

      - name: Check if update is needed
        id: check_update
        run: |
          echo "Current: ${{ steps.get_current_version.outputs.current_version }}"
          echo "Latest: ${{ steps.get_latest_version.outputs.version }}"
          if [ "${{ steps.get_current_version.outputs.current_version }}" = "${{ steps.get_latest_version.outputs.version }}" ]; then
            echo "up_to_date=true" >> $GITHUB_OUTPUT
          else
            echo "up_to_date=false" >> $GITHUB_OUTPUT
          fi
        shell: bash

      - name: Update package.json with latest version
        if: steps.check_update.outputs.up_to_date == 'false'
        run: |
          cd apps/plotly_examples
          npm pkg set dependencies.@fluentui/react-charting=${{ steps.get_latest_version.outputs.version }}

      - name: Install dependencies
        if: steps.check_update.outputs.up_to_date == 'false'
        run: |
          cd apps/plotly_examples
          yarn install

      - name: Update version in App.tsx if v5.23.xx
        if: steps.check_update.outputs.up_to_date == 'false'
        run: |
          cd apps/plotly_examples/src
          # Extract just the version number (e.g., 5.24.1) from the latest version
          version="${{ steps.get_latest_version.outputs.version }}"
          # Use sed to replace v5.23.xx with the new version (e.g., v5.24.1)
          sed -i -E "s/v5\.23\.[0-9]+/v$version/g" App.tsx
          git add App.tsx

      - name: Build app after updating version
        if: steps.check_update.outputs.up_to_date == 'false'
        run: |
          cd apps/plotly_examples
          yarn build

      - name: Create branch with timestamp
        if: steps.check_update.outputs.up_to_date == 'false'
        id: branch
        run: |
          BRANCH="update-react-charting-$(date +'%Y%m%d-%H%M%S')"
          git checkout -b $BRANCH
          echo "branch=$BRANCH" >> $GITHUB_OUTPUT

      - name: Commit and push changes
        if: steps.check_update.outputs.up_to_date == 'false'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add apps/plotly_examples/package.json apps/plotly_examples/yarn.lock
          git commit -m "chore: update @fluentui/react-charting to version ${{ steps.get_latest_version.outputs.version }}"
          git push origin ${{ steps.branch.outputs.branch }}

      - name: Create Pull Request
        if: steps.check_update.outputs.up_to_date == 'false'
        uses: peter-evans/create-pull-request@v6
        with:
          branch: ${{ steps.branch.outputs.branch }}
          title: "chore: update @fluentui/react-charting to version ${{ steps.get_latest_version.outputs.version }}"
          body: "This PR updates @fluentui/react-charting to version ${{ steps.get_latest_version.outputs.version }}"
          base: main
