name: 'Test coverage'
on:
  workflow_dispatch:
  schedule:
    - cron: "30 15 * * *"
  
jobs:
  test_env_setup_job:
    name: Test coverage
    strategy:
      matrix:
        os: [windows-latest]
    runs-on: ${{ matrix.os }}
    outputs:
      test_coverage: ${{ steps.run_tests.outputs }}
    steps:                                                   
      # - name: Checkout [master]
      #   uses: actions/checkout@v4

      # - name: Checkout [react-charting]
      #   uses: actions/checkout@v4
      #   with: 
      #     repository: "microsoft/fluentui"
      #     path: repo1

      # - name: Show current directory
      #   run: echo "$PWD" && ls

      # - name: Change function visibility from private to public
      #   id: setup
      #   uses: ./tools/UnitTestApp/ChangeFunctionVisibility
      #   with:
      #     osType: ${{ matrix.os }}

      # - name: Install packages
      #   run: yarn --cwd ./tools/UnitTestApp && yarn --cwd ./repo1 && yarn --cwd ./repo1/packages/react-charting
      
      # - name: Build
      #   run:  yarn --cwd ./repo1 buildto @fluentui/react-charting

      # - name: Run the tests in ubuntu
      #   if: matrix.os == 'ubuntu-latest' 
      #   run: cd ./repo1/packages/react-charting && sed -i 's/PROD/TEST/g' ./config/tests.js && yarn test --coverage --coverageReporters=html --verbose

      # - name: Run the tests in macos
      #   if: matrix.os == 'macos-latest'
      #   run: cd ./repo1/packages/react-charting && sed -i '' 's/PROD/TEST/g' ./config/tests.js && yarn test --coverage --coverageReporters=html --verbose

      # - name: Run the tests in windows
      #   if: matrix.os == 'windows-latest'
      #   run: cd ./repo1/packages/react-charting && powershell -Command "(Get-Content -Path ./config/tests.js) -replace 'PROD', 'TEST' | Set-Content -Path ./config/tests.js" && yarn test --coverage --coverageReporters=html --verbose

      # - name: Generate coverage file name
      #   if: matrix.os != 'windows-latest'
      #   run: echo "COVERAGE_FILENAME=test_coverage_${{ matrix.os }}_$(date +%H_%M_%S)" >> $GITHUB_ENV

      - name: Generate coverage file name
        if: matrix.os == 'windows-latest'
        run: set COVERAGE_FILENAME=test_coverage_${{ matrix.os }}_%DATE%_%TIME% & echo %COVERAGE_FILENAME% >> GITHUB_ENV & echo %env.COVERAGE_FILENAME%

      # - name: Save coverage file
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: ${{env.COVERAGE_FILENAME}}
      #     path: ./repo1/packages/react-charting/coverage

        
