diff --git a/node_modules/@griffel/react/RendererContext.cjs.js b/node_modules/@griffel/react/RendererContext.cjs.js
index 20502f5..7f99605 100644
--- a/node_modules/@griffel/react/RendererContext.cjs.js
+++ b/node_modules/@griffel/react/RendererContext.cjs.js
@@ -27,7 +27,7 @@ var React__namespace = /*#__PURE__*/_interopNamespaceCompat(React);
 /**
  * @private
  */
-const RendererContext = /*#__PURE__*/React__namespace.createContext( /*#__PURE__*/core.createDOMRenderer());
+const RendererContext = /*#__PURE__*/React__namespace.createContext(/*#__PURE__*/core.createDOMRenderer());
 /**
  * @public
  */
diff --git a/node_modules/@griffel/react/RendererContext.cjs.js.map b/node_modules/@griffel/react/RendererContext.cjs.js.map
index 3b8593b..a1e1bb4 100644
--- a/node_modules/@griffel/react/RendererContext.cjs.js.map
+++ b/node_modules/@griffel/react/RendererContext.cjs.js.map
@@ -1 +1 @@
-{"version":3,"file":"RendererContext.cjs.js","sources":["../../../packages/react/src/RendererContext.tsx"],"sourcesContent":["import { createDOMRenderer, rehydrateRendererCache } from '@griffel/core';\nimport type { GriffelRenderer } from '@griffel/core';\nimport * as React from 'react';\n\nimport { canUseDOM } from './utils/canUseDOM';\n\nexport interface RendererProviderProps {\n  /** An instance of Griffel renderer. */\n  renderer: GriffelRenderer;\n\n  /**\n   * Document used to insert CSS variables to head\n   */\n  targetDocument?: Document;\n\n  /**\n   * Content wrapped by the RendererProvider\n   */\n  children: React.ReactNode;\n}\n\n/**\n * @private\n */\nconst RendererContext = React.createContext<GriffelRenderer>(createDOMRenderer());\n\n/**\n * @public\n */\nexport const RendererProvider: React.FC<RendererProviderProps> = ({ children, renderer, targetDocument }) => {\n  React.useMemo(() => {\n    if (canUseDOM()) {\n      // \"rehydrateCache()\" can't be called in effects as it needs to be called before any component will be rendered to\n      // avoid double insertion of classes\n      rehydrateRendererCache(renderer, targetDocument);\n    }\n  }, [renderer, targetDocument]);\n\n  return <RendererContext.Provider value={renderer}>{children}</RendererContext.Provider>;\n};\n\n/**\n * Returns an instance of current makeStyles() renderer.\n *\n * @private Exported as \"useRenderer_unstable\" use it on own risk. Can be changed or removed without a notice.\n */\nexport function useRenderer(): GriffelRenderer {\n  return React.useContext(RendererContext);\n}\n"],"names":["RendererContext","React","createContext","createDOMRenderer","RendererProvider","children","renderer","targetDocument","useMemo","canUseDOM","rehydrateRendererCache","createElement","Provider","value","useRenderer","useContext"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAqBA;;AAEG;AACH,MAAMA,eAAe,gBAAGC,gBAAK,CAACC,aAAa,eAAkBC,sBAAiB,EAAE,CAAC,CAAA;AAEjF;;AAEG;AACI,MAAMC,gBAAgB,GAAoCA,CAAC;EAAEC,QAAQ;EAAEC,QAAQ;AAAEC,EAAAA,cAAAA;AAAc,CAAE,KAAI;EAC1GN,gBAAK,CAACO,OAAO,CAAC,MAAK;IACjB,IAAIC,mBAAS,EAAE,EAAE;AACf;AACA;AACAC,MAAAA,2BAAsB,CAACJ,QAAQ,EAAEC,cAAc,CAAC,CAAA;AAClD,KAAA;AACF,GAAC,EAAE,CAACD,QAAQ,EAAEC,cAAc,CAAC,CAAC,CAAA;AAE9B,EAAA,oBAAON,gBAAA,CAAAU,aAAA,CAACX,eAAe,CAACY,QAAQ,EAAA;AAACC,IAAAA,KAAK,EAAEP,QAAAA;GAAQ,EAAGD,QAAQ,CAA4B,CAAA;AACzF,EAAC;AAED;;;;AAIG;SACaS,WAAWA,GAAA;AACzB,EAAA,OAAOb,gBAAK,CAACc,UAAU,CAACf,eAAe,CAAC,CAAA;AAC1C;;;;;"}
\ No newline at end of file
+{"version":3,"file":"RendererContext.cjs.js","sources":["../../../packages/react/src/RendererContext.tsx"],"sourcesContent":["import { createDOMRenderer, rehydrateRendererCache } from '@griffel/core';\nimport type { GriffelRenderer } from '@griffel/core';\nimport * as React from 'react';\n\nimport { canUseDOM } from './utils/canUseDOM';\n\nexport interface RendererProviderProps {\n  /** An instance of Griffel renderer. */\n  renderer: GriffelRenderer;\n\n  /**\n   * Document used to insert CSS variables to head\n   */\n  targetDocument?: Document;\n\n  /**\n   * Content wrapped by the RendererProvider\n   */\n  children: React.ReactNode;\n}\n\n/**\n * @private\n */\nconst RendererContext = React.createContext<GriffelRenderer>(createDOMRenderer());\n\n/**\n * @public\n */\nexport const RendererProvider: React.FC<RendererProviderProps> = ({ children, renderer, targetDocument }) => {\n  React.useMemo(() => {\n    if (canUseDOM()) {\n      // \"rehydrateCache()\" can't be called in effects as it needs to be called before any component will be rendered to\n      // avoid double insertion of classes\n      rehydrateRendererCache(renderer, targetDocument);\n    }\n  }, [renderer, targetDocument]);\n\n  return <RendererContext.Provider value={renderer}>{children}</RendererContext.Provider>;\n};\n\n/**\n * Returns an instance of current makeStyles() renderer.\n *\n * @private Exported as \"useRenderer_unstable\" use it on own risk. Can be changed or removed without a notice.\n */\nexport function useRenderer(): GriffelRenderer {\n  return React.useContext(RendererContext);\n}\n"],"names":["RendererContext","React","createContext","createDOMRenderer","RendererProvider","children","renderer","targetDocument","useMemo","canUseDOM","rehydrateRendererCache","createElement","Provider","value","useRenderer","useContext"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAqBA;;AAEG;AACH,MAAMA,eAAe,gBAAGC,gBAAK,CAACC,aAAa,cAAkBC,sBAAiB,EAAE,CAAC;AAEjF;;AAEG;AACI,MAAMC,gBAAgB,GAAoCA,CAAC;EAAEC,QAAQ;EAAEC,QAAQ;AAAEC,EAAAA;AAAc,CAAE,KAAI;EAC1GN,gBAAK,CAACO,OAAO,CAAC,MAAK;IACjB,IAAIC,mBAAS,EAAE,EAAE;AACf;AACA;AACAC,MAAAA,2BAAsB,CAACJ,QAAQ,EAAEC,cAAc,CAAC;AAClD;AACF,GAAC,EAAE,CAACD,QAAQ,EAAEC,cAAc,CAAC,CAAC;AAE9B,EAAA,oBAAON,gBAAA,CAAAU,aAAA,CAACX,eAAe,CAACY,QAAQ,EAAA;AAACC,IAAAA,KAAK,EAAEP;GAAQ,EAAGD,QAAQ,CAA4B;AACzF;AAEA;;;;AAIG;SACaS,WAAWA,GAAA;AACzB,EAAA,OAAOb,gBAAK,CAACc,UAAU,CAACf,eAAe,CAAC;AAC1C;;;;;"}
\ No newline at end of file
diff --git a/node_modules/@griffel/react/RendererContext.esm.js b/node_modules/@griffel/react/RendererContext.esm.js
index 6ea774c..13f7eb9 100644
--- a/node_modules/@griffel/react/RendererContext.esm.js
+++ b/node_modules/@griffel/react/RendererContext.esm.js
@@ -5,7 +5,7 @@ import { canUseDOM } from './utils/canUseDOM.esm.js';
 /**
  * @private
  */
-const RendererContext = /*#__PURE__*/React.createContext( /*#__PURE__*/createDOMRenderer());
+const RendererContext = /*#__PURE__*/React.createContext(/*#__PURE__*/createDOMRenderer());
 /**
  * @public
  */
diff --git a/node_modules/@griffel/react/RendererContext.esm.js.map b/node_modules/@griffel/react/RendererContext.esm.js.map
index e6e9efd..d95ea33 100644
--- a/node_modules/@griffel/react/RendererContext.esm.js.map
+++ b/node_modules/@griffel/react/RendererContext.esm.js.map
@@ -1 +1 @@
-{"version":3,"file":"RendererContext.esm.js","sources":["../../../packages/react/src/RendererContext.tsx"],"sourcesContent":["import { createDOMRenderer, rehydrateRendererCache } from '@griffel/core';\nimport type { GriffelRenderer } from '@griffel/core';\nimport * as React from 'react';\n\nimport { canUseDOM } from './utils/canUseDOM';\n\nexport interface RendererProviderProps {\n  /** An instance of Griffel renderer. */\n  renderer: GriffelRenderer;\n\n  /**\n   * Document used to insert CSS variables to head\n   */\n  targetDocument?: Document;\n\n  /**\n   * Content wrapped by the RendererProvider\n   */\n  children: React.ReactNode;\n}\n\n/**\n * @private\n */\nconst RendererContext = React.createContext<GriffelRenderer>(createDOMRenderer());\n\n/**\n * @public\n */\nexport const RendererProvider: React.FC<RendererProviderProps> = ({ children, renderer, targetDocument }) => {\n  React.useMemo(() => {\n    if (canUseDOM()) {\n      // \"rehydrateCache()\" can't be called in effects as it needs to be called before any component will be rendered to\n      // avoid double insertion of classes\n      rehydrateRendererCache(renderer, targetDocument);\n    }\n  }, [renderer, targetDocument]);\n\n  return <RendererContext.Provider value={renderer}>{children}</RendererContext.Provider>;\n};\n\n/**\n * Returns an instance of current makeStyles() renderer.\n *\n * @private Exported as \"useRenderer_unstable\" use it on own risk. Can be changed or removed without a notice.\n */\nexport function useRenderer(): GriffelRenderer {\n  return React.useContext(RendererContext);\n}\n"],"names":["RendererContext","React","createContext","createDOMRenderer","RendererProvider","children","renderer","targetDocument","useMemo","canUseDOM","rehydrateRendererCache","createElement","Provider","value","useRenderer","useContext"],"mappings":";;;;AAqBA;;AAEG;AACH,MAAMA,eAAe,gBAAGC,KAAK,CAACC,aAAa,eAAkBC,iBAAiB,EAAE,CAAC,CAAA;AAEjF;;AAEG;AACI,MAAMC,gBAAgB,GAAoCA,CAAC;EAAEC,QAAQ;EAAEC,QAAQ;AAAEC,EAAAA,cAAAA;AAAc,CAAE,KAAI;EAC1GN,KAAK,CAACO,OAAO,CAAC,MAAK;IACjB,IAAIC,SAAS,EAAE,EAAE;AACf;AACA;AACAC,MAAAA,sBAAsB,CAACJ,QAAQ,EAAEC,cAAc,CAAC,CAAA;AAClD,KAAA;AACF,GAAC,EAAE,CAACD,QAAQ,EAAEC,cAAc,CAAC,CAAC,CAAA;AAE9B,EAAA,oBAAON,KAAA,CAAAU,aAAA,CAACX,eAAe,CAACY,QAAQ,EAAA;AAACC,IAAAA,KAAK,EAAEP,QAAAA;GAAQ,EAAGD,QAAQ,CAA4B,CAAA;AACzF,EAAC;AAED;;;;AAIG;SACaS,WAAWA,GAAA;AACzB,EAAA,OAAOb,KAAK,CAACc,UAAU,CAACf,eAAe,CAAC,CAAA;AAC1C;;;;"}
\ No newline at end of file
+{"version":3,"file":"RendererContext.esm.js","sources":["../../../packages/react/src/RendererContext.tsx"],"sourcesContent":["import { createDOMRenderer, rehydrateRendererCache } from '@griffel/core';\nimport type { GriffelRenderer } from '@griffel/core';\nimport * as React from 'react';\n\nimport { canUseDOM } from './utils/canUseDOM';\n\nexport interface RendererProviderProps {\n  /** An instance of Griffel renderer. */\n  renderer: GriffelRenderer;\n\n  /**\n   * Document used to insert CSS variables to head\n   */\n  targetDocument?: Document;\n\n  /**\n   * Content wrapped by the RendererProvider\n   */\n  children: React.ReactNode;\n}\n\n/**\n * @private\n */\nconst RendererContext = React.createContext<GriffelRenderer>(createDOMRenderer());\n\n/**\n * @public\n */\nexport const RendererProvider: React.FC<RendererProviderProps> = ({ children, renderer, targetDocument }) => {\n  React.useMemo(() => {\n    if (canUseDOM()) {\n      // \"rehydrateCache()\" can't be called in effects as it needs to be called before any component will be rendered to\n      // avoid double insertion of classes\n      rehydrateRendererCache(renderer, targetDocument);\n    }\n  }, [renderer, targetDocument]);\n\n  return <RendererContext.Provider value={renderer}>{children}</RendererContext.Provider>;\n};\n\n/**\n * Returns an instance of current makeStyles() renderer.\n *\n * @private Exported as \"useRenderer_unstable\" use it on own risk. Can be changed or removed without a notice.\n */\nexport function useRenderer(): GriffelRenderer {\n  return React.useContext(RendererContext);\n}\n"],"names":["RendererContext","React","createContext","createDOMRenderer","RendererProvider","children","renderer","targetDocument","useMemo","canUseDOM","rehydrateRendererCache","createElement","Provider","value","useRenderer","useContext"],"mappings":";;;;AAqBA;;AAEG;AACH,MAAMA,eAAe,gBAAGC,KAAK,CAACC,aAAa,cAAkBC,iBAAiB,EAAE,CAAC;AAEjF;;AAEG;AACI,MAAMC,gBAAgB,GAAoCA,CAAC;EAAEC,QAAQ;EAAEC,QAAQ;AAAEC,EAAAA;AAAc,CAAE,KAAI;EAC1GN,KAAK,CAACO,OAAO,CAAC,MAAK;IACjB,IAAIC,SAAS,EAAE,EAAE;AACf;AACA;AACAC,MAAAA,sBAAsB,CAACJ,QAAQ,EAAEC,cAAc,CAAC;AAClD;AACF,GAAC,EAAE,CAACD,QAAQ,EAAEC,cAAc,CAAC,CAAC;AAE9B,EAAA,oBAAON,KAAA,CAAAU,aAAA,CAACX,eAAe,CAACY,QAAQ,EAAA;AAACC,IAAAA,KAAK,EAAEP;GAAQ,EAAGD,QAAQ,CAA4B;AACzF;AAEA;;;;AAIG;SACaS,WAAWA,GAAA;AACzB,EAAA,OAAOb,KAAK,CAACc,UAAU,CAACf,eAAe,CAAC;AAC1C;;;;"}
\ No newline at end of file
diff --git a/node_modules/@griffel/react/TextDirectionContext.cjs.js.map b/node_modules/@griffel/react/TextDirectionContext.cjs.js.map
index 25ad117..e81f341 100644
--- a/node_modules/@griffel/react/TextDirectionContext.cjs.js.map
+++ b/node_modules/@griffel/react/TextDirectionContext.cjs.js.map
@@ -1 +1 @@
-{"version":3,"file":"TextDirectionContext.cjs.js","sources":["../../../packages/react/src/TextDirectionContext.tsx"],"sourcesContent":["import * as React from 'react';\n\nexport interface TextDirectionProviderProps {\n  /** Indicates the directionality of the element's text. */\n  dir: 'ltr' | 'rtl';\n\n  /**\n   * Content wrapped by the TextDirectionProvider.\n   */\n  children: React.ReactNode;\n}\n\n/**\n * @private\n */\nconst TextDirectionContext = React.createContext<'ltr' | 'rtl'>('ltr');\n\n/**\n * @public\n */\nexport const TextDirectionProvider: React.FC<TextDirectionProviderProps> = ({ children, dir }) => {\n  return <TextDirectionContext.Provider value={dir}>{children}</TextDirectionContext.Provider>;\n};\n\n/**\n * Returns current directionality of the element's text.\n *\n * @private\n */\nexport function useTextDirection() {\n  return React.useContext(TextDirectionContext);\n}\n"],"names":["TextDirectionContext","React","createContext","TextDirectionProvider","children","dir","createElement","Provider","value","useTextDirection","useContext"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAYA;;AAEG;AACH,MAAMA,oBAAoB,gBAAGC,gBAAK,CAACC,aAAa,CAAgB,KAAK,CAAC,CAAA;AAEtE;;AAEG;AACI,MAAMC,qBAAqB,GAAyCA,CAAC;EAAEC,QAAQ;AAAEC,EAAAA,GAAAA;AAAK,CAAA,KAAI;AAC/F,EAAA,oBAAOJ,gBAAA,CAAAK,aAAA,CAACN,oBAAoB,CAACO,QAAQ,EAAA;AAACC,IAAAA,KAAK,EAAEH,GAAAA;GAAG,EAAGD,QAAQ,CAAiC,CAAA;AAC9F,EAAC;AAED;;;;AAIG;SACaK,gBAAgBA,GAAA;AAC9B,EAAA,OAAOR,gBAAK,CAACS,UAAU,CAACV,oBAAoB,CAAC,CAAA;AAC/C;;;;;"}
\ No newline at end of file
+{"version":3,"file":"TextDirectionContext.cjs.js","sources":["../../../packages/react/src/TextDirectionContext.tsx"],"sourcesContent":["import * as React from 'react';\n\nexport interface TextDirectionProviderProps {\n  /** Indicates the directionality of the element's text. */\n  dir: 'ltr' | 'rtl';\n\n  /**\n   * Content wrapped by the TextDirectionProvider.\n   */\n  children: React.ReactNode;\n}\n\n/**\n * @private\n */\nconst TextDirectionContext = React.createContext<'ltr' | 'rtl'>('ltr');\n\n/**\n * @public\n */\nexport const TextDirectionProvider: React.FC<TextDirectionProviderProps> = ({ children, dir }) => {\n  return <TextDirectionContext.Provider value={dir}>{children}</TextDirectionContext.Provider>;\n};\n\n/**\n * Returns current directionality of the element's text.\n *\n * @private\n */\nexport function useTextDirection() {\n  return React.useContext(TextDirectionContext);\n}\n"],"names":["TextDirectionContext","React","createContext","TextDirectionProvider","children","dir","createElement","Provider","value","useTextDirection","useContext"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAYA;;AAEG;AACH,MAAMA,oBAAoB,gBAAGC,gBAAK,CAACC,aAAa,CAAgB,KAAK,CAAC;AAEtE;;AAEG;AACI,MAAMC,qBAAqB,GAAyCA,CAAC;EAAEC,QAAQ;AAAEC,EAAAA;AAAK,CAAA,KAAI;AAC/F,EAAA,oBAAOJ,gBAAA,CAAAK,aAAA,CAACN,oBAAoB,CAACO,QAAQ,EAAA;AAACC,IAAAA,KAAK,EAAEH;GAAG,EAAGD,QAAQ,CAAiC;AAC9F;AAEA;;;;AAIG;SACaK,gBAAgBA,GAAA;AAC9B,EAAA,OAAOR,gBAAK,CAACS,UAAU,CAACV,oBAAoB,CAAC;AAC/C;;;;;"}
\ No newline at end of file
diff --git a/node_modules/@griffel/react/TextDirectionContext.esm.js.map b/node_modules/@griffel/react/TextDirectionContext.esm.js.map
index 4a642f6..ff3a8bc 100644
--- a/node_modules/@griffel/react/TextDirectionContext.esm.js.map
+++ b/node_modules/@griffel/react/TextDirectionContext.esm.js.map
@@ -1 +1 @@
-{"version":3,"file":"TextDirectionContext.esm.js","sources":["../../../packages/react/src/TextDirectionContext.tsx"],"sourcesContent":["import * as React from 'react';\n\nexport interface TextDirectionProviderProps {\n  /** Indicates the directionality of the element's text. */\n  dir: 'ltr' | 'rtl';\n\n  /**\n   * Content wrapped by the TextDirectionProvider.\n   */\n  children: React.ReactNode;\n}\n\n/**\n * @private\n */\nconst TextDirectionContext = React.createContext<'ltr' | 'rtl'>('ltr');\n\n/**\n * @public\n */\nexport const TextDirectionProvider: React.FC<TextDirectionProviderProps> = ({ children, dir }) => {\n  return <TextDirectionContext.Provider value={dir}>{children}</TextDirectionContext.Provider>;\n};\n\n/**\n * Returns current directionality of the element's text.\n *\n * @private\n */\nexport function useTextDirection() {\n  return React.useContext(TextDirectionContext);\n}\n"],"names":["TextDirectionContext","React","createContext","TextDirectionProvider","children","dir","createElement","Provider","value","useTextDirection","useContext"],"mappings":";;AAYA;;AAEG;AACH,MAAMA,oBAAoB,gBAAGC,KAAK,CAACC,aAAa,CAAgB,KAAK,CAAC,CAAA;AAEtE;;AAEG;AACI,MAAMC,qBAAqB,GAAyCA,CAAC;EAAEC,QAAQ;AAAEC,EAAAA,GAAAA;AAAK,CAAA,KAAI;AAC/F,EAAA,oBAAOJ,KAAA,CAAAK,aAAA,CAACN,oBAAoB,CAACO,QAAQ,EAAA;AAACC,IAAAA,KAAK,EAAEH,GAAAA;GAAG,EAAGD,QAAQ,CAAiC,CAAA;AAC9F,EAAC;AAED;;;;AAIG;SACaK,gBAAgBA,GAAA;AAC9B,EAAA,OAAOR,KAAK,CAACS,UAAU,CAACV,oBAAoB,CAAC,CAAA;AAC/C;;;;"}
\ No newline at end of file
+{"version":3,"file":"TextDirectionContext.esm.js","sources":["../../../packages/react/src/TextDirectionContext.tsx"],"sourcesContent":["import * as React from 'react';\n\nexport interface TextDirectionProviderProps {\n  /** Indicates the directionality of the element's text. */\n  dir: 'ltr' | 'rtl';\n\n  /**\n   * Content wrapped by the TextDirectionProvider.\n   */\n  children: React.ReactNode;\n}\n\n/**\n * @private\n */\nconst TextDirectionContext = React.createContext<'ltr' | 'rtl'>('ltr');\n\n/**\n * @public\n */\nexport const TextDirectionProvider: React.FC<TextDirectionProviderProps> = ({ children, dir }) => {\n  return <TextDirectionContext.Provider value={dir}>{children}</TextDirectionContext.Provider>;\n};\n\n/**\n * Returns current directionality of the element's text.\n *\n * @private\n */\nexport function useTextDirection() {\n  return React.useContext(TextDirectionContext);\n}\n"],"names":["TextDirectionContext","React","createContext","TextDirectionProvider","children","dir","createElement","Provider","value","useTextDirection","useContext"],"mappings":";;AAYA;;AAEG;AACH,MAAMA,oBAAoB,gBAAGC,KAAK,CAACC,aAAa,CAAgB,KAAK,CAAC;AAEtE;;AAEG;AACI,MAAMC,qBAAqB,GAAyCA,CAAC;EAAEC,QAAQ;AAAEC,EAAAA;AAAK,CAAA,KAAI;AAC/F,EAAA,oBAAOJ,KAAA,CAAAK,aAAA,CAACN,oBAAoB,CAACO,QAAQ,EAAA;AAACC,IAAAA,KAAK,EAAEH;GAAG,EAAGD,QAAQ,CAAiC;AAC9F;AAEA;;;;AAIG;SACaK,gBAAgBA,GAAA;AAC9B,EAAA,OAAOR,KAAK,CAACS,UAAU,CAACV,oBAAoB,CAAC;AAC/C;;;;"}
\ No newline at end of file
diff --git a/node_modules/@griffel/react/__css.cjs.js.map b/node_modules/@griffel/react/__css.cjs.js.map
index 1b23251..d710713 100644
--- a/node_modules/@griffel/react/__css.cjs.js.map
+++ b/node_modules/@griffel/react/__css.cjs.js.map
@@ -1 +1 @@
-{"version":3,"file":"__css.cjs.js","sources":["../../../packages/react/src/__css.ts"],"sourcesContent":["import { __css as vanillaCSS } from '@griffel/core';\nimport type { CSSClassesMapBySlot } from '@griffel/core';\n\nimport { useTextDirection } from './TextDirectionContext';\n\n/**\n * A version of makeStyles() that accepts build output as an input and skips all runtime transforms & DOM insertion.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function __css<Slots extends string>(classesMapBySlot: CSSClassesMapBySlot<Slots>) {\n  const getStyles = vanillaCSS(classesMapBySlot);\n\n  return function useClasses(): Record<Slots, string> {\n    const dir = useTextDirection();\n\n    return getStyles({ dir });\n  };\n}\n"],"names":["__css","classesMapBySlot","getStyles","vanillaCSS","useClasses","dir","useTextDirection"],"mappings":";;;;;AAKA;;;;AAIG;AACH;AACM,SAAUA,KAAKA,CAAuBC,gBAA4C,EAAA;AACtF,EAAA,MAAMC,SAAS,GAAGC,UAAU,CAACF,gBAAgB,CAAC,CAAA;EAE9C,OAAO,SAASG,UAAUA,GAAA;AACxB,IAAA,MAAMC,GAAG,GAAGC,qCAAgB,EAAE,CAAA;AAE9B,IAAA,OAAOJ,SAAS,CAAC;AAAEG,MAAAA,GAAAA;AAAG,KAAE,CAAC,CAAA;GAC1B,CAAA;AACH;;;;"}
\ No newline at end of file
+{"version":3,"file":"__css.cjs.js","sources":["../../../packages/react/src/__css.ts"],"sourcesContent":["import { __css as vanillaCSS } from '@griffel/core';\nimport type { CSSClassesMapBySlot } from '@griffel/core';\n\nimport { useTextDirection } from './TextDirectionContext';\n\n/**\n * A version of makeStyles() that accepts build output as an input and skips all runtime transforms & DOM insertion.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function __css<Slots extends string>(classesMapBySlot: CSSClassesMapBySlot<Slots>) {\n  const getStyles = vanillaCSS(classesMapBySlot);\n\n  return function useClasses(): Record<Slots, string> {\n    const dir = useTextDirection();\n\n    return getStyles({ dir });\n  };\n}\n"],"names":["__css","classesMapBySlot","getStyles","vanillaCSS","useClasses","dir","useTextDirection"],"mappings":";;;;;AAKA;;;;AAIG;AACH;AACM,SAAUA,KAAKA,CAAuBC,gBAA4C,EAAA;AACtF,EAAA,MAAMC,SAAS,GAAGC,UAAU,CAACF,gBAAgB,CAAC;EAE9C,OAAO,SAASG,UAAUA,GAAA;AACxB,IAAA,MAAMC,GAAG,GAAGC,qCAAgB,EAAE;AAE9B,IAAA,OAAOJ,SAAS,CAAC;AAAEG,MAAAA;AAAG,KAAE,CAAC;GAC1B;AACH;;;;"}
\ No newline at end of file
diff --git a/node_modules/@griffel/react/__css.esm.js.map b/node_modules/@griffel/react/__css.esm.js.map
index de274c8..27ef454 100644
--- a/node_modules/@griffel/react/__css.esm.js.map
+++ b/node_modules/@griffel/react/__css.esm.js.map
@@ -1 +1 @@
-{"version":3,"file":"__css.esm.js","sources":["../../../packages/react/src/__css.ts"],"sourcesContent":["import { __css as vanillaCSS } from '@griffel/core';\nimport type { CSSClassesMapBySlot } from '@griffel/core';\n\nimport { useTextDirection } from './TextDirectionContext';\n\n/**\n * A version of makeStyles() that accepts build output as an input and skips all runtime transforms & DOM insertion.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function __css<Slots extends string>(classesMapBySlot: CSSClassesMapBySlot<Slots>) {\n  const getStyles = vanillaCSS(classesMapBySlot);\n\n  return function useClasses(): Record<Slots, string> {\n    const dir = useTextDirection();\n\n    return getStyles({ dir });\n  };\n}\n"],"names":["__css","classesMapBySlot","getStyles","vanillaCSS","useClasses","dir","useTextDirection"],"mappings":";;;AAKA;;;;AAIG;AACH;AACM,SAAUA,KAAKA,CAAuBC,gBAA4C,EAAA;AACtF,EAAA,MAAMC,SAAS,GAAGC,OAAU,CAACF,gBAAgB,CAAC,CAAA;EAE9C,OAAO,SAASG,UAAUA,GAAA;AACxB,IAAA,MAAMC,GAAG,GAAGC,gBAAgB,EAAE,CAAA;AAE9B,IAAA,OAAOJ,SAAS,CAAC;AAAEG,MAAAA,GAAAA;AAAG,KAAE,CAAC,CAAA;GAC1B,CAAA;AACH;;;;"}
\ No newline at end of file
+{"version":3,"file":"__css.esm.js","sources":["../../../packages/react/src/__css.ts"],"sourcesContent":["import { __css as vanillaCSS } from '@griffel/core';\nimport type { CSSClassesMapBySlot } from '@griffel/core';\n\nimport { useTextDirection } from './TextDirectionContext';\n\n/**\n * A version of makeStyles() that accepts build output as an input and skips all runtime transforms & DOM insertion.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function __css<Slots extends string>(classesMapBySlot: CSSClassesMapBySlot<Slots>) {\n  const getStyles = vanillaCSS(classesMapBySlot);\n\n  return function useClasses(): Record<Slots, string> {\n    const dir = useTextDirection();\n\n    return getStyles({ dir });\n  };\n}\n"],"names":["__css","classesMapBySlot","getStyles","vanillaCSS","useClasses","dir","useTextDirection"],"mappings":";;;AAKA;;;;AAIG;AACH;AACM,SAAUA,KAAKA,CAAuBC,gBAA4C,EAAA;AACtF,EAAA,MAAMC,SAAS,GAAGC,OAAU,CAACF,gBAAgB,CAAC;EAE9C,OAAO,SAASG,UAAUA,GAAA;AACxB,IAAA,MAAMC,GAAG,GAAGC,gBAAgB,EAAE;AAE9B,IAAA,OAAOJ,SAAS,CAAC;AAAEG,MAAAA;AAAG,KAAE,CAAC;GAC1B;AACH;;;;"}
\ No newline at end of file
diff --git a/node_modules/@griffel/react/__resetCSS.cjs.js.map b/node_modules/@griffel/react/__resetCSS.cjs.js.map
index 86df726..3e6ecbb 100644
--- a/node_modules/@griffel/react/__resetCSS.cjs.js.map
+++ b/node_modules/@griffel/react/__resetCSS.cjs.js.map
@@ -1 +1 @@
-{"version":3,"file":"__resetCSS.cjs.js","sources":["../../../packages/react/src/__resetCSS.ts"],"sourcesContent":["import { __resetCSS as vanillaResetCSS } from '@griffel/core';\nimport { useTextDirection } from './TextDirectionContext';\n\n/**\n * A version of makeResetStyles() that accepts build output as an input and skips all runtime transforms & DOM insertion.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function __resetCSS(ltrClassName: string, rtlClassName: string | null) {\n  const getStyles = vanillaResetCSS(ltrClassName, rtlClassName);\n\n  return function useClasses(): string {\n    const dir = useTextDirection();\n\n    return getStyles({ dir });\n  };\n}\n"],"names":["__resetCSS","ltrClassName","rtlClassName","getStyles","vanillaResetCSS","useClasses","dir","useTextDirection"],"mappings":";;;;;AAGA;;;;AAIG;AACH;AACgB,SAAAA,UAAUA,CAACC,YAAoB,EAAEC,YAA2B,EAAA;AAC1E,EAAA,MAAMC,SAAS,GAAGC,eAAe,CAACH,YAAY,EAAEC,YAAY,CAAC,CAAA;EAE7D,OAAO,SAASG,UAAUA,GAAA;AACxB,IAAA,MAAMC,GAAG,GAAGC,qCAAgB,EAAE,CAAA;AAE9B,IAAA,OAAOJ,SAAS,CAAC;AAAEG,MAAAA,GAAAA;AAAG,KAAE,CAAC,CAAA;GAC1B,CAAA;AACH;;;;"}
\ No newline at end of file
+{"version":3,"file":"__resetCSS.cjs.js","sources":["../../../packages/react/src/__resetCSS.ts"],"sourcesContent":["import { __resetCSS as vanillaResetCSS } from '@griffel/core';\nimport { useTextDirection } from './TextDirectionContext';\n\n/**\n * A version of makeResetStyles() that accepts build output as an input and skips all runtime transforms & DOM insertion.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function __resetCSS(ltrClassName: string, rtlClassName: string | null) {\n  const getStyles = vanillaResetCSS(ltrClassName, rtlClassName);\n\n  return function useClasses(): string {\n    const dir = useTextDirection();\n\n    return getStyles({ dir });\n  };\n}\n"],"names":["__resetCSS","ltrClassName","rtlClassName","getStyles","vanillaResetCSS","useClasses","dir","useTextDirection"],"mappings":";;;;;AAGA;;;;AAIG;AACH;AACgB,SAAAA,UAAUA,CAACC,YAAoB,EAAEC,YAA2B,EAAA;AAC1E,EAAA,MAAMC,SAAS,GAAGC,eAAe,CAACH,YAAY,EAAEC,YAAY,CAAC;EAE7D,OAAO,SAASG,UAAUA,GAAA;AACxB,IAAA,MAAMC,GAAG,GAAGC,qCAAgB,EAAE;AAE9B,IAAA,OAAOJ,SAAS,CAAC;AAAEG,MAAAA;AAAG,KAAE,CAAC;GAC1B;AACH;;;;"}
\ No newline at end of file
diff --git a/node_modules/@griffel/react/__resetCSS.esm.js.map b/node_modules/@griffel/react/__resetCSS.esm.js.map
index 8cd0085..b38ae46 100644
--- a/node_modules/@griffel/react/__resetCSS.esm.js.map
+++ b/node_modules/@griffel/react/__resetCSS.esm.js.map
@@ -1 +1 @@
-{"version":3,"file":"__resetCSS.esm.js","sources":["../../../packages/react/src/__resetCSS.ts"],"sourcesContent":["import { __resetCSS as vanillaResetCSS } from '@griffel/core';\nimport { useTextDirection } from './TextDirectionContext';\n\n/**\n * A version of makeResetStyles() that accepts build output as an input and skips all runtime transforms & DOM insertion.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function __resetCSS(ltrClassName: string, rtlClassName: string | null) {\n  const getStyles = vanillaResetCSS(ltrClassName, rtlClassName);\n\n  return function useClasses(): string {\n    const dir = useTextDirection();\n\n    return getStyles({ dir });\n  };\n}\n"],"names":["__resetCSS","ltrClassName","rtlClassName","getStyles","vanillaResetCSS","useClasses","dir","useTextDirection"],"mappings":";;;AAGA;;;;AAIG;AACH;AACgB,SAAAA,UAAUA,CAACC,YAAoB,EAAEC,YAA2B,EAAA;AAC1E,EAAA,MAAMC,SAAS,GAAGC,YAAe,CAACH,YAAY,EAAEC,YAAY,CAAC,CAAA;EAE7D,OAAO,SAASG,UAAUA,GAAA;AACxB,IAAA,MAAMC,GAAG,GAAGC,gBAAgB,EAAE,CAAA;AAE9B,IAAA,OAAOJ,SAAS,CAAC;AAAEG,MAAAA,GAAAA;AAAG,KAAE,CAAC,CAAA;GAC1B,CAAA;AACH;;;;"}
\ No newline at end of file
+{"version":3,"file":"__resetCSS.esm.js","sources":["../../../packages/react/src/__resetCSS.ts"],"sourcesContent":["import { __resetCSS as vanillaResetCSS } from '@griffel/core';\nimport { useTextDirection } from './TextDirectionContext';\n\n/**\n * A version of makeResetStyles() that accepts build output as an input and skips all runtime transforms & DOM insertion.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function __resetCSS(ltrClassName: string, rtlClassName: string | null) {\n  const getStyles = vanillaResetCSS(ltrClassName, rtlClassName);\n\n  return function useClasses(): string {\n    const dir = useTextDirection();\n\n    return getStyles({ dir });\n  };\n}\n"],"names":["__resetCSS","ltrClassName","rtlClassName","getStyles","vanillaResetCSS","useClasses","dir","useTextDirection"],"mappings":";;;AAGA;;;;AAIG;AACH;AACgB,SAAAA,UAAUA,CAACC,YAAoB,EAAEC,YAA2B,EAAA;AAC1E,EAAA,MAAMC,SAAS,GAAGC,YAAe,CAACH,YAAY,EAAEC,YAAY,CAAC;EAE7D,OAAO,SAASG,UAAUA,GAAA;AACxB,IAAA,MAAMC,GAAG,GAAGC,gBAAgB,EAAE;AAE9B,IAAA,OAAOJ,SAAS,CAAC;AAAEG,MAAAA;AAAG,KAAE,CAAC;GAC1B;AACH;;;;"}
\ No newline at end of file
diff --git a/node_modules/@griffel/react/__resetStyles.cjs.js.map b/node_modules/@griffel/react/__resetStyles.cjs.js.map
index 14c9425..fada334 100644
--- a/node_modules/@griffel/react/__resetStyles.cjs.js.map
+++ b/node_modules/@griffel/react/__resetStyles.cjs.js.map
@@ -1 +1 @@
-{"version":3,"file":"__resetStyles.cjs.js","sources":["../../../packages/react/src/__resetStyles.ts"],"sourcesContent":["import { __resetStyles as vanillaResetStyles } from '@griffel/core';\nimport type { CSSRulesByBucket } from '@griffel/core';\n\nimport { insertionFactory } from './insertionFactory';\nimport { useRenderer } from './RendererContext';\nimport { useTextDirection } from './TextDirectionContext';\n\n/**\n * A version of makeResetStyles() that accepts build output as an input and skips all runtime transforms.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function __resetStyles(\n  ltrClassName: string,\n  rtlClassName: string | null,\n  cssRules: CSSRulesByBucket | string[],\n) {\n  const getStyles = vanillaResetStyles(ltrClassName, rtlClassName, cssRules, insertionFactory);\n\n  return function useClasses(): string {\n    const dir = useTextDirection();\n    const renderer = useRenderer();\n\n    return getStyles({ dir, renderer });\n  };\n}\n"],"names":["__resetStyles","ltrClassName","rtlClassName","cssRules","getStyles","vanillaResetStyles","insertionFactory","useClasses","dir","useTextDirection","renderer","useRenderer"],"mappings":";;;;;;;AAOA;;;;AAIG;AACH;SACgBA,aAAaA,CAC3BC,YAAoB,EACpBC,YAA2B,EAC3BC,QAAqC,EAAA;EAErC,MAAMC,SAAS,GAAGC,kBAAkB,CAACJ,YAAY,EAAEC,YAAY,EAAEC,QAAQ,EAAEG,iCAAgB,CAAC,CAAA;EAE5F,OAAO,SAASC,UAAUA,GAAA;AACxB,IAAA,MAAMC,GAAG,GAAGC,qCAAgB,EAAE,CAAA;AAC9B,IAAA,MAAMC,QAAQ,GAAGC,2BAAW,EAAE,CAAA;AAE9B,IAAA,OAAOP,SAAS,CAAC;MAAEI,GAAG;AAAEE,MAAAA,QAAAA;AAAQ,KAAE,CAAC,CAAA;GACpC,CAAA;AACH;;;;"}
\ No newline at end of file
+{"version":3,"file":"__resetStyles.cjs.js","sources":["../../../packages/react/src/__resetStyles.ts"],"sourcesContent":["import { __resetStyles as vanillaResetStyles } from '@griffel/core';\nimport type { CSSRulesByBucket } from '@griffel/core';\n\nimport { insertionFactory } from './insertionFactory';\nimport { useRenderer } from './RendererContext';\nimport { useTextDirection } from './TextDirectionContext';\n\n/**\n * A version of makeResetStyles() that accepts build output as an input and skips all runtime transforms.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function __resetStyles(\n  ltrClassName: string,\n  rtlClassName: string | null,\n  cssRules: CSSRulesByBucket | string[],\n) {\n  const getStyles = vanillaResetStyles(ltrClassName, rtlClassName, cssRules, insertionFactory);\n\n  return function useClasses(): string {\n    const dir = useTextDirection();\n    const renderer = useRenderer();\n\n    return getStyles({ dir, renderer });\n  };\n}\n"],"names":["__resetStyles","ltrClassName","rtlClassName","cssRules","getStyles","vanillaResetStyles","insertionFactory","useClasses","dir","useTextDirection","renderer","useRenderer"],"mappings":";;;;;;;AAOA;;;;AAIG;AACH;SACgBA,aAAaA,CAC3BC,YAAoB,EACpBC,YAA2B,EAC3BC,QAAqC,EAAA;EAErC,MAAMC,SAAS,GAAGC,kBAAkB,CAACJ,YAAY,EAAEC,YAAY,EAAEC,QAAQ,EAAEG,iCAAgB,CAAC;EAE5F,OAAO,SAASC,UAAUA,GAAA;AACxB,IAAA,MAAMC,GAAG,GAAGC,qCAAgB,EAAE;AAC9B,IAAA,MAAMC,QAAQ,GAAGC,2BAAW,EAAE;AAE9B,IAAA,OAAOP,SAAS,CAAC;MAAEI,GAAG;AAAEE,MAAAA;AAAQ,KAAE,CAAC;GACpC;AACH;;;;"}
\ No newline at end of file
diff --git a/node_modules/@griffel/react/__resetStyles.esm.js.map b/node_modules/@griffel/react/__resetStyles.esm.js.map
index 25b1700..f33509b 100644
--- a/node_modules/@griffel/react/__resetStyles.esm.js.map
+++ b/node_modules/@griffel/react/__resetStyles.esm.js.map
@@ -1 +1 @@
-{"version":3,"file":"__resetStyles.esm.js","sources":["../../../packages/react/src/__resetStyles.ts"],"sourcesContent":["import { __resetStyles as vanillaResetStyles } from '@griffel/core';\nimport type { CSSRulesByBucket } from '@griffel/core';\n\nimport { insertionFactory } from './insertionFactory';\nimport { useRenderer } from './RendererContext';\nimport { useTextDirection } from './TextDirectionContext';\n\n/**\n * A version of makeResetStyles() that accepts build output as an input and skips all runtime transforms.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function __resetStyles(\n  ltrClassName: string,\n  rtlClassName: string | null,\n  cssRules: CSSRulesByBucket | string[],\n) {\n  const getStyles = vanillaResetStyles(ltrClassName, rtlClassName, cssRules, insertionFactory);\n\n  return function useClasses(): string {\n    const dir = useTextDirection();\n    const renderer = useRenderer();\n\n    return getStyles({ dir, renderer });\n  };\n}\n"],"names":["__resetStyles","ltrClassName","rtlClassName","cssRules","getStyles","vanillaResetStyles","insertionFactory","useClasses","dir","useTextDirection","renderer","useRenderer"],"mappings":";;;;;AAOA;;;;AAIG;AACH;SACgBA,aAAaA,CAC3BC,YAAoB,EACpBC,YAA2B,EAC3BC,QAAqC,EAAA;EAErC,MAAMC,SAAS,GAAGC,eAAkB,CAACJ,YAAY,EAAEC,YAAY,EAAEC,QAAQ,EAAEG,gBAAgB,CAAC,CAAA;EAE5F,OAAO,SAASC,UAAUA,GAAA;AACxB,IAAA,MAAMC,GAAG,GAAGC,gBAAgB,EAAE,CAAA;AAC9B,IAAA,MAAMC,QAAQ,GAAGC,WAAW,EAAE,CAAA;AAE9B,IAAA,OAAOP,SAAS,CAAC;MAAEI,GAAG;AAAEE,MAAAA,QAAAA;AAAQ,KAAE,CAAC,CAAA;GACpC,CAAA;AACH;;;;"}
\ No newline at end of file
+{"version":3,"file":"__resetStyles.esm.js","sources":["../../../packages/react/src/__resetStyles.ts"],"sourcesContent":["import { __resetStyles as vanillaResetStyles } from '@griffel/core';\nimport type { CSSRulesByBucket } from '@griffel/core';\n\nimport { insertionFactory } from './insertionFactory';\nimport { useRenderer } from './RendererContext';\nimport { useTextDirection } from './TextDirectionContext';\n\n/**\n * A version of makeResetStyles() that accepts build output as an input and skips all runtime transforms.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function __resetStyles(\n  ltrClassName: string,\n  rtlClassName: string | null,\n  cssRules: CSSRulesByBucket | string[],\n) {\n  const getStyles = vanillaResetStyles(ltrClassName, rtlClassName, cssRules, insertionFactory);\n\n  return function useClasses(): string {\n    const dir = useTextDirection();\n    const renderer = useRenderer();\n\n    return getStyles({ dir, renderer });\n  };\n}\n"],"names":["__resetStyles","ltrClassName","rtlClassName","cssRules","getStyles","vanillaResetStyles","insertionFactory","useClasses","dir","useTextDirection","renderer","useRenderer"],"mappings":";;;;;AAOA;;;;AAIG;AACH;SACgBA,aAAaA,CAC3BC,YAAoB,EACpBC,YAA2B,EAC3BC,QAAqC,EAAA;EAErC,MAAMC,SAAS,GAAGC,eAAkB,CAACJ,YAAY,EAAEC,YAAY,EAAEC,QAAQ,EAAEG,gBAAgB,CAAC;EAE5F,OAAO,SAASC,UAAUA,GAAA;AACxB,IAAA,MAAMC,GAAG,GAAGC,gBAAgB,EAAE;AAC9B,IAAA,MAAMC,QAAQ,GAAGC,WAAW,EAAE;AAE9B,IAAA,OAAOP,SAAS,CAAC;MAAEI,GAAG;AAAEE,MAAAA;AAAQ,KAAE,CAAC;GACpC;AACH;;;;"}
\ No newline at end of file
diff --git a/node_modules/@griffel/react/__styles.cjs.js.map b/node_modules/@griffel/react/__styles.cjs.js.map
index 2b6ef71..9aac6f1 100644
--- a/node_modules/@griffel/react/__styles.cjs.js.map
+++ b/node_modules/@griffel/react/__styles.cjs.js.map
@@ -1 +1 @@
-{"version":3,"file":"__styles.cjs.js","sources":["../../../packages/react/src/__styles.ts"],"sourcesContent":["import { __styles as vanillaStyles } from '@griffel/core';\nimport type { CSSClassesMapBySlot, CSSRulesByBucket } from '@griffel/core';\n\nimport { insertionFactory } from './insertionFactory';\nimport { useRenderer } from './RendererContext';\nimport { useTextDirection } from './TextDirectionContext';\n\n/**\n * A version of makeStyles() that accepts build output as an input and skips all runtime transforms.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function __styles<Slots extends string>(\n  classesMapBySlot: CSSClassesMapBySlot<Slots>,\n  cssRules: CSSRulesByBucket,\n) {\n  const getStyles = vanillaStyles(classesMapBySlot, cssRules, insertionFactory);\n\n  return function useClasses(): Record<Slots, string> {\n    const dir = useTextDirection();\n    const renderer = useRenderer();\n\n    return getStyles({ dir, renderer });\n  };\n}\n"],"names":["__styles","classesMapBySlot","cssRules","getStyles","vanillaStyles","insertionFactory","useClasses","dir","useTextDirection","renderer","useRenderer"],"mappings":";;;;;;;AAOA;;;;AAIG;AACH;AACgB,SAAAA,QAAQA,CACtBC,gBAA4C,EAC5CC,QAA0B,EAAA;EAE1B,MAAMC,SAAS,GAAGC,aAAa,CAACH,gBAAgB,EAAEC,QAAQ,EAAEG,iCAAgB,CAAC,CAAA;EAE7E,OAAO,SAASC,UAAUA,GAAA;AACxB,IAAA,MAAMC,GAAG,GAAGC,qCAAgB,EAAE,CAAA;AAC9B,IAAA,MAAMC,QAAQ,GAAGC,2BAAW,EAAE,CAAA;AAE9B,IAAA,OAAOP,SAAS,CAAC;MAAEI,GAAG;AAAEE,MAAAA,QAAAA;AAAQ,KAAE,CAAC,CAAA;GACpC,CAAA;AACH;;;;"}
\ No newline at end of file
+{"version":3,"file":"__styles.cjs.js","sources":["../../../packages/react/src/__styles.ts"],"sourcesContent":["import { __styles as vanillaStyles } from '@griffel/core';\nimport type { CSSClassesMapBySlot, CSSRulesByBucket } from '@griffel/core';\n\nimport { insertionFactory } from './insertionFactory';\nimport { useRenderer } from './RendererContext';\nimport { useTextDirection } from './TextDirectionContext';\n\n/**\n * A version of makeStyles() that accepts build output as an input and skips all runtime transforms.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function __styles<Slots extends string>(\n  classesMapBySlot: CSSClassesMapBySlot<Slots>,\n  cssRules: CSSRulesByBucket,\n) {\n  const getStyles = vanillaStyles(classesMapBySlot, cssRules, insertionFactory);\n\n  return function useClasses(): Record<Slots, string> {\n    const dir = useTextDirection();\n    const renderer = useRenderer();\n\n    return getStyles({ dir, renderer });\n  };\n}\n"],"names":["__styles","classesMapBySlot","cssRules","getStyles","vanillaStyles","insertionFactory","useClasses","dir","useTextDirection","renderer","useRenderer"],"mappings":";;;;;;;AAOA;;;;AAIG;AACH;AACgB,SAAAA,QAAQA,CACtBC,gBAA4C,EAC5CC,QAA0B,EAAA;EAE1B,MAAMC,SAAS,GAAGC,aAAa,CAACH,gBAAgB,EAAEC,QAAQ,EAAEG,iCAAgB,CAAC;EAE7E,OAAO,SAASC,UAAUA,GAAA;AACxB,IAAA,MAAMC,GAAG,GAAGC,qCAAgB,EAAE;AAC9B,IAAA,MAAMC,QAAQ,GAAGC,2BAAW,EAAE;AAE9B,IAAA,OAAOP,SAAS,CAAC;MAAEI,GAAG;AAAEE,MAAAA;AAAQ,KAAE,CAAC;GACpC;AACH;;;;"}
\ No newline at end of file
diff --git a/node_modules/@griffel/react/__styles.esm.js.map b/node_modules/@griffel/react/__styles.esm.js.map
index 2cd9569..c9cfd75 100644
--- a/node_modules/@griffel/react/__styles.esm.js.map
+++ b/node_modules/@griffel/react/__styles.esm.js.map
@@ -1 +1 @@
-{"version":3,"file":"__styles.esm.js","sources":["../../../packages/react/src/__styles.ts"],"sourcesContent":["import { __styles as vanillaStyles } from '@griffel/core';\nimport type { CSSClassesMapBySlot, CSSRulesByBucket } from '@griffel/core';\n\nimport { insertionFactory } from './insertionFactory';\nimport { useRenderer } from './RendererContext';\nimport { useTextDirection } from './TextDirectionContext';\n\n/**\n * A version of makeStyles() that accepts build output as an input and skips all runtime transforms.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function __styles<Slots extends string>(\n  classesMapBySlot: CSSClassesMapBySlot<Slots>,\n  cssRules: CSSRulesByBucket,\n) {\n  const getStyles = vanillaStyles(classesMapBySlot, cssRules, insertionFactory);\n\n  return function useClasses(): Record<Slots, string> {\n    const dir = useTextDirection();\n    const renderer = useRenderer();\n\n    return getStyles({ dir, renderer });\n  };\n}\n"],"names":["__styles","classesMapBySlot","cssRules","getStyles","vanillaStyles","insertionFactory","useClasses","dir","useTextDirection","renderer","useRenderer"],"mappings":";;;;;AAOA;;;;AAIG;AACH;AACgB,SAAAA,QAAQA,CACtBC,gBAA4C,EAC5CC,QAA0B,EAAA;EAE1B,MAAMC,SAAS,GAAGC,UAAa,CAACH,gBAAgB,EAAEC,QAAQ,EAAEG,gBAAgB,CAAC,CAAA;EAE7E,OAAO,SAASC,UAAUA,GAAA;AACxB,IAAA,MAAMC,GAAG,GAAGC,gBAAgB,EAAE,CAAA;AAC9B,IAAA,MAAMC,QAAQ,GAAGC,WAAW,EAAE,CAAA;AAE9B,IAAA,OAAOP,SAAS,CAAC;MAAEI,GAAG;AAAEE,MAAAA,QAAAA;AAAQ,KAAE,CAAC,CAAA;GACpC,CAAA;AACH;;;;"}
\ No newline at end of file
+{"version":3,"file":"__styles.esm.js","sources":["../../../packages/react/src/__styles.ts"],"sourcesContent":["import { __styles as vanillaStyles } from '@griffel/core';\nimport type { CSSClassesMapBySlot, CSSRulesByBucket } from '@griffel/core';\n\nimport { insertionFactory } from './insertionFactory';\nimport { useRenderer } from './RendererContext';\nimport { useTextDirection } from './TextDirectionContext';\n\n/**\n * A version of makeStyles() that accepts build output as an input and skips all runtime transforms.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function __styles<Slots extends string>(\n  classesMapBySlot: CSSClassesMapBySlot<Slots>,\n  cssRules: CSSRulesByBucket,\n) {\n  const getStyles = vanillaStyles(classesMapBySlot, cssRules, insertionFactory);\n\n  return function useClasses(): Record<Slots, string> {\n    const dir = useTextDirection();\n    const renderer = useRenderer();\n\n    return getStyles({ dir, renderer });\n  };\n}\n"],"names":["__styles","classesMapBySlot","cssRules","getStyles","vanillaStyles","insertionFactory","useClasses","dir","useTextDirection","renderer","useRenderer"],"mappings":";;;;;AAOA;;;;AAIG;AACH;AACgB,SAAAA,QAAQA,CACtBC,gBAA4C,EAC5CC,QAA0B,EAAA;EAE1B,MAAMC,SAAS,GAAGC,UAAa,CAACH,gBAAgB,EAAEC,QAAQ,EAAEG,gBAAgB,CAAC;EAE7E,OAAO,SAASC,UAAUA,GAAA;AACxB,IAAA,MAAMC,GAAG,GAAGC,gBAAgB,EAAE;AAC9B,IAAA,MAAMC,QAAQ,GAAGC,WAAW,EAAE;AAE9B,IAAA,OAAOP,SAAS,CAAC;MAAEI,GAAG;AAAEE,MAAAA;AAAQ,KAAE,CAAC;GACpC;AACH;;;;"}
\ No newline at end of file
diff --git a/node_modules/@griffel/react/insertionFactory.cjs.js.map b/node_modules/@griffel/react/insertionFactory.cjs.js.map
index 64a1f1a..1bbc892 100644
--- a/node_modules/@griffel/react/insertionFactory.cjs.js.map
+++ b/node_modules/@griffel/react/insertionFactory.cjs.js.map
@@ -1 +1 @@
-{"version":3,"file":"insertionFactory.cjs.js","sources":["../../../packages/react/src/insertionFactory.ts"],"sourcesContent":["import type { CSSRulesByBucket, GriffelInsertionFactory, GriffelRenderer } from '@griffel/core';\n\nimport { canUseDOM } from './utils/canUseDOM';\nimport { useInsertionEffect } from './useInsertionEffect';\n\nexport const insertionFactory: GriffelInsertionFactory = () => {\n  const insertionCache: Record<string, boolean> = {};\n\n  return function insert(renderer: GriffelRenderer, cssRules: CSSRulesByBucket) {\n    // Even if `useInsertionEffect` is available, we can use it on a client only as it will not be executed in SSR\n    if (useInsertionEffect && canUseDOM()) {\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      useInsertionEffect(() => {\n        renderer.insertCSSRules(cssRules!);\n      }, [renderer, cssRules]);\n\n      return;\n    }\n\n    if (insertionCache[renderer.id] === undefined) {\n      renderer.insertCSSRules(cssRules!);\n      insertionCache[renderer.id] = true;\n    }\n  };\n};\n"],"names":["insertionFactory","insertionCache","insert","renderer","cssRules","useInsertionEffect","canUseDOM","insertCSSRules","id","undefined"],"mappings":";;;;;AAKaA,MAAAA,gBAAgB,GAA4BA,MAAK;EAC5D,MAAMC,cAAc,GAA4B,EAAE,CAAA;AAElD,EAAA,OAAO,SAASC,MAAMA,CAACC,QAAyB,EAAEC,QAA0B,EAAA;AAC1E;AACA,IAAA,IAAIC,qCAAkB,IAAIC,mBAAS,EAAE,EAAE;AACrC;AACAD,MAAAA,qCAAkB,CAAC,MAAK;AACtBF,QAAAA,QAAQ,CAACI,cAAc,CAACH,QAAS,CAAC,CAAA;AACpC,OAAC,EAAE,CAACD,QAAQ,EAAEC,QAAQ,CAAC,CAAC,CAAA;AAExB,MAAA,OAAA;AACF,KAAA;IAEA,IAAIH,cAAc,CAACE,QAAQ,CAACK,EAAE,CAAC,KAAKC,SAAS,EAAE;AAC7CN,MAAAA,QAAQ,CAACI,cAAc,CAACH,QAAS,CAAC,CAAA;AAClCH,MAAAA,cAAc,CAACE,QAAQ,CAACK,EAAE,CAAC,GAAG,IAAI,CAAA;AACpC,KAAA;GACD,CAAA;AACH;;;;"}
\ No newline at end of file
+{"version":3,"file":"insertionFactory.cjs.js","sources":["../../../packages/react/src/insertionFactory.ts"],"sourcesContent":["import type { CSSRulesByBucket, GriffelInsertionFactory, GriffelRenderer } from '@griffel/core';\n\nimport { canUseDOM } from './utils/canUseDOM';\nimport { useInsertionEffect } from './useInsertionEffect';\n\nexport const insertionFactory: GriffelInsertionFactory = () => {\n  const insertionCache: Record<string, boolean> = {};\n\n  return function insert(renderer: GriffelRenderer, cssRules: CSSRulesByBucket) {\n    // Even if `useInsertionEffect` is available, we can use it on a client only as it will not be executed in SSR\n    if (useInsertionEffect && canUseDOM()) {\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      useInsertionEffect(() => {\n        renderer.insertCSSRules(cssRules!);\n      }, [renderer, cssRules]);\n\n      return;\n    }\n\n    if (insertionCache[renderer.id] === undefined) {\n      renderer.insertCSSRules(cssRules!);\n      insertionCache[renderer.id] = true;\n    }\n  };\n};\n"],"names":["insertionFactory","insertionCache","insert","renderer","cssRules","useInsertionEffect","canUseDOM","insertCSSRules","id","undefined"],"mappings":";;;;;AAKaA,MAAAA,gBAAgB,GAA4BA,MAAK;EAC5D,MAAMC,cAAc,GAA4B,EAAE;AAElD,EAAA,OAAO,SAASC,MAAMA,CAACC,QAAyB,EAAEC,QAA0B,EAAA;AAC1E;AACA,IAAA,IAAIC,qCAAkB,IAAIC,mBAAS,EAAE,EAAE;AACrC;AACAD,MAAAA,qCAAkB,CAAC,MAAK;AACtBF,QAAAA,QAAQ,CAACI,cAAc,CAACH,QAAS,CAAC;AACpC,OAAC,EAAE,CAACD,QAAQ,EAAEC,QAAQ,CAAC,CAAC;AAExB,MAAA;AACF;IAEA,IAAIH,cAAc,CAACE,QAAQ,CAACK,EAAE,CAAC,KAAKC,SAAS,EAAE;AAC7CN,MAAAA,QAAQ,CAACI,cAAc,CAACH,QAAS,CAAC;AAClCH,MAAAA,cAAc,CAACE,QAAQ,CAACK,EAAE,CAAC,GAAG,IAAI;AACpC;GACD;AACH;;;;"}
\ No newline at end of file
diff --git a/node_modules/@griffel/react/insertionFactory.esm.js.map b/node_modules/@griffel/react/insertionFactory.esm.js.map
index a06f9a9..9b7aec0 100644
--- a/node_modules/@griffel/react/insertionFactory.esm.js.map
+++ b/node_modules/@griffel/react/insertionFactory.esm.js.map
@@ -1 +1 @@
-{"version":3,"file":"insertionFactory.esm.js","sources":["../../../packages/react/src/insertionFactory.ts"],"sourcesContent":["import type { CSSRulesByBucket, GriffelInsertionFactory, GriffelRenderer } from '@griffel/core';\n\nimport { canUseDOM } from './utils/canUseDOM';\nimport { useInsertionEffect } from './useInsertionEffect';\n\nexport const insertionFactory: GriffelInsertionFactory = () => {\n  const insertionCache: Record<string, boolean> = {};\n\n  return function insert(renderer: GriffelRenderer, cssRules: CSSRulesByBucket) {\n    // Even if `useInsertionEffect` is available, we can use it on a client only as it will not be executed in SSR\n    if (useInsertionEffect && canUseDOM()) {\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      useInsertionEffect(() => {\n        renderer.insertCSSRules(cssRules!);\n      }, [renderer, cssRules]);\n\n      return;\n    }\n\n    if (insertionCache[renderer.id] === undefined) {\n      renderer.insertCSSRules(cssRules!);\n      insertionCache[renderer.id] = true;\n    }\n  };\n};\n"],"names":["insertionFactory","insertionCache","insert","renderer","cssRules","useInsertionEffect","canUseDOM","insertCSSRules","id","undefined"],"mappings":";;;AAKaA,MAAAA,gBAAgB,GAA4BA,MAAK;EAC5D,MAAMC,cAAc,GAA4B,EAAE,CAAA;AAElD,EAAA,OAAO,SAASC,MAAMA,CAACC,QAAyB,EAAEC,QAA0B,EAAA;AAC1E;AACA,IAAA,IAAIC,kBAAkB,IAAIC,SAAS,EAAE,EAAE;AACrC;AACAD,MAAAA,kBAAkB,CAAC,MAAK;AACtBF,QAAAA,QAAQ,CAACI,cAAc,CAACH,QAAS,CAAC,CAAA;AACpC,OAAC,EAAE,CAACD,QAAQ,EAAEC,QAAQ,CAAC,CAAC,CAAA;AAExB,MAAA,OAAA;AACF,KAAA;IAEA,IAAIH,cAAc,CAACE,QAAQ,CAACK,EAAE,CAAC,KAAKC,SAAS,EAAE;AAC7CN,MAAAA,QAAQ,CAACI,cAAc,CAACH,QAAS,CAAC,CAAA;AAClCH,MAAAA,cAAc,CAACE,QAAQ,CAACK,EAAE,CAAC,GAAG,IAAI,CAAA;AACpC,KAAA;GACD,CAAA;AACH;;;;"}
\ No newline at end of file
+{"version":3,"file":"insertionFactory.esm.js","sources":["../../../packages/react/src/insertionFactory.ts"],"sourcesContent":["import type { CSSRulesByBucket, GriffelInsertionFactory, GriffelRenderer } from '@griffel/core';\n\nimport { canUseDOM } from './utils/canUseDOM';\nimport { useInsertionEffect } from './useInsertionEffect';\n\nexport const insertionFactory: GriffelInsertionFactory = () => {\n  const insertionCache: Record<string, boolean> = {};\n\n  return function insert(renderer: GriffelRenderer, cssRules: CSSRulesByBucket) {\n    // Even if `useInsertionEffect` is available, we can use it on a client only as it will not be executed in SSR\n    if (useInsertionEffect && canUseDOM()) {\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      useInsertionEffect(() => {\n        renderer.insertCSSRules(cssRules!);\n      }, [renderer, cssRules]);\n\n      return;\n    }\n\n    if (insertionCache[renderer.id] === undefined) {\n      renderer.insertCSSRules(cssRules!);\n      insertionCache[renderer.id] = true;\n    }\n  };\n};\n"],"names":["insertionFactory","insertionCache","insert","renderer","cssRules","useInsertionEffect","canUseDOM","insertCSSRules","id","undefined"],"mappings":";;;AAKaA,MAAAA,gBAAgB,GAA4BA,MAAK;EAC5D,MAAMC,cAAc,GAA4B,EAAE;AAElD,EAAA,OAAO,SAASC,MAAMA,CAACC,QAAyB,EAAEC,QAA0B,EAAA;AAC1E;AACA,IAAA,IAAIC,kBAAkB,IAAIC,SAAS,EAAE,EAAE;AACrC;AACAD,MAAAA,kBAAkB,CAAC,MAAK;AACtBF,QAAAA,QAAQ,CAACI,cAAc,CAACH,QAAS,CAAC;AACpC,OAAC,EAAE,CAACD,QAAQ,EAAEC,QAAQ,CAAC,CAAC;AAExB,MAAA;AACF;IAEA,IAAIH,cAAc,CAACE,QAAQ,CAACK,EAAE,CAAC,KAAKC,SAAS,EAAE;AAC7CN,MAAAA,QAAQ,CAACI,cAAc,CAACH,QAAS,CAAC;AAClCH,MAAAA,cAAc,CAACE,QAAQ,CAACK,EAAE,CAAC,GAAG,IAAI;AACpC;GACD;AACH;;;;"}
\ No newline at end of file
diff --git a/node_modules/@griffel/react/makeResetStyles.cjs.js.map b/node_modules/@griffel/react/makeResetStyles.cjs.js.map
index 23f8b8d..1d44de4 100644
--- a/node_modules/@griffel/react/makeResetStyles.cjs.js.map
+++ b/node_modules/@griffel/react/makeResetStyles.cjs.js.map
@@ -1 +1 @@
-{"version":3,"file":"makeResetStyles.cjs.js","sources":["../../../packages/react/src/makeResetStyles.ts"],"sourcesContent":["import { makeResetStyles as vanillaMakeResetStyles } from '@griffel/core';\nimport type { GriffelResetStyle } from '@griffel/core';\n\nimport { insertionFactory } from './insertionFactory';\nimport { useRenderer } from './RendererContext';\nimport { useTextDirection } from './TextDirectionContext';\nimport { isInsideComponent } from './utils/isInsideComponent';\n\nexport function makeResetStyles(styles: GriffelResetStyle) {\n  const getStyles = vanillaMakeResetStyles(styles, insertionFactory);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (isInsideComponent()) {\n      throw new Error(\n        [\n          \"makeResetStyles(): this function cannot be called in component's scope.\",\n          'All makeResetStyles() calls should be top level i.e. in a root scope of a file.',\n        ].join(' '),\n      );\n    }\n  }\n\n  return function useClassName(): string {\n    const dir = useTextDirection();\n    const renderer = useRenderer();\n\n    return getStyles({ dir, renderer });\n  };\n}\n"],"names":["makeResetStyles","styles","getStyles","vanillaMakeResetStyles","insertionFactory","process","env","NODE_ENV","isInsideComponent","Error","join","useClassName","dir","useTextDirection","renderer","useRenderer"],"mappings":";;;;;;;;AAQM,SAAUA,eAAeA,CAACC,MAAyB,EAAA;AACvD,EAAA,MAAMC,SAAS,GAAGC,oBAAsB,CAACF,MAAM,EAAEG,iCAAgB,CAAC,CAAA;AAElE,EAAA,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACzC,IAAIC,mCAAiB,EAAE,EAAE;AACvB,MAAA,MAAM,IAAIC,KAAK,CACb,CACE,yEAAyE,EACzE,iFAAiF,CAClF,CAACC,IAAI,CAAC,GAAG,CAAC,CACZ,CAAA;AACH,KAAA;AACF,GAAA;EAEA,OAAO,SAASC,YAAYA,GAAA;AAC1B,IAAA,MAAMC,GAAG,GAAGC,qCAAgB,EAAE,CAAA;AAC9B,IAAA,MAAMC,QAAQ,GAAGC,2BAAW,EAAE,CAAA;AAE9B,IAAA,OAAOb,SAAS,CAAC;MAAEU,GAAG;AAAEE,MAAAA,QAAAA;AAAQ,KAAE,CAAC,CAAA;GACpC,CAAA;AACH;;;;"}
\ No newline at end of file
+{"version":3,"file":"makeResetStyles.cjs.js","sources":["../../../packages/react/src/makeResetStyles.ts"],"sourcesContent":["import { makeResetStyles as vanillaMakeResetStyles } from '@griffel/core';\nimport type { GriffelResetStyle } from '@griffel/core';\n\nimport { insertionFactory } from './insertionFactory';\nimport { useRenderer } from './RendererContext';\nimport { useTextDirection } from './TextDirectionContext';\nimport { isInsideComponent } from './utils/isInsideComponent';\n\nexport function makeResetStyles(styles: GriffelResetStyle) {\n  const getStyles = vanillaMakeResetStyles(styles, insertionFactory);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (isInsideComponent()) {\n      throw new Error(\n        [\n          \"makeResetStyles(): this function cannot be called in component's scope.\",\n          'All makeResetStyles() calls should be top level i.e. in a root scope of a file.',\n        ].join(' '),\n      );\n    }\n  }\n\n  return function useClassName(): string {\n    const dir = useTextDirection();\n    const renderer = useRenderer();\n\n    return getStyles({ dir, renderer });\n  };\n}\n"],"names":["makeResetStyles","styles","getStyles","vanillaMakeResetStyles","insertionFactory","process","env","NODE_ENV","isInsideComponent","Error","join","useClassName","dir","useTextDirection","renderer","useRenderer"],"mappings":";;;;;;;;AAQM,SAAUA,eAAeA,CAACC,MAAyB,EAAA;AACvD,EAAA,MAAMC,SAAS,GAAGC,oBAAsB,CAACF,MAAM,EAAEG,iCAAgB,CAAC;AAElE,EAAA,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACzC,IAAIC,mCAAiB,EAAE,EAAE;AACvB,MAAA,MAAM,IAAIC,KAAK,CACb,CACE,yEAAyE,EACzE,iFAAiF,CAClF,CAACC,IAAI,CAAC,GAAG,CAAC,CACZ;AACH;AACF;EAEA,OAAO,SAASC,YAAYA,GAAA;AAC1B,IAAA,MAAMC,GAAG,GAAGC,qCAAgB,EAAE;AAC9B,IAAA,MAAMC,QAAQ,GAAGC,2BAAW,EAAE;AAE9B,IAAA,OAAOb,SAAS,CAAC;MAAEU,GAAG;AAAEE,MAAAA;AAAQ,KAAE,CAAC;GACpC;AACH;;;;"}
\ No newline at end of file
diff --git a/node_modules/@griffel/react/makeResetStyles.esm.js.map b/node_modules/@griffel/react/makeResetStyles.esm.js.map
index 51308eb..23aa859 100644
--- a/node_modules/@griffel/react/makeResetStyles.esm.js.map
+++ b/node_modules/@griffel/react/makeResetStyles.esm.js.map
@@ -1 +1 @@
-{"version":3,"file":"makeResetStyles.esm.js","sources":["../../../packages/react/src/makeResetStyles.ts"],"sourcesContent":["import { makeResetStyles as vanillaMakeResetStyles } from '@griffel/core';\nimport type { GriffelResetStyle } from '@griffel/core';\n\nimport { insertionFactory } from './insertionFactory';\nimport { useRenderer } from './RendererContext';\nimport { useTextDirection } from './TextDirectionContext';\nimport { isInsideComponent } from './utils/isInsideComponent';\n\nexport function makeResetStyles(styles: GriffelResetStyle) {\n  const getStyles = vanillaMakeResetStyles(styles, insertionFactory);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (isInsideComponent()) {\n      throw new Error(\n        [\n          \"makeResetStyles(): this function cannot be called in component's scope.\",\n          'All makeResetStyles() calls should be top level i.e. in a root scope of a file.',\n        ].join(' '),\n      );\n    }\n  }\n\n  return function useClassName(): string {\n    const dir = useTextDirection();\n    const renderer = useRenderer();\n\n    return getStyles({ dir, renderer });\n  };\n}\n"],"names":["makeResetStyles","styles","getStyles","vanillaMakeResetStyles","insertionFactory","process","env","NODE_ENV","isInsideComponent","Error","join","useClassName","dir","useTextDirection","renderer","useRenderer"],"mappings":";;;;;;AAQM,SAAUA,eAAeA,CAACC,MAAyB,EAAA;AACvD,EAAA,MAAMC,SAAS,GAAGC,iBAAsB,CAACF,MAAM,EAAEG,gBAAgB,CAAC,CAAA;AAElE,EAAA,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACzC,IAAIC,iBAAiB,EAAE,EAAE;AACvB,MAAA,MAAM,IAAIC,KAAK,CACb,CACE,yEAAyE,EACzE,iFAAiF,CAClF,CAACC,IAAI,CAAC,GAAG,CAAC,CACZ,CAAA;AACH,KAAA;AACF,GAAA;EAEA,OAAO,SAASC,YAAYA,GAAA;AAC1B,IAAA,MAAMC,GAAG,GAAGC,gBAAgB,EAAE,CAAA;AAC9B,IAAA,MAAMC,QAAQ,GAAGC,WAAW,EAAE,CAAA;AAE9B,IAAA,OAAOb,SAAS,CAAC;MAAEU,GAAG;AAAEE,MAAAA,QAAAA;AAAQ,KAAE,CAAC,CAAA;GACpC,CAAA;AACH;;;;"}
\ No newline at end of file
+{"version":3,"file":"makeResetStyles.esm.js","sources":["../../../packages/react/src/makeResetStyles.ts"],"sourcesContent":["import { makeResetStyles as vanillaMakeResetStyles } from '@griffel/core';\nimport type { GriffelResetStyle } from '@griffel/core';\n\nimport { insertionFactory } from './insertionFactory';\nimport { useRenderer } from './RendererContext';\nimport { useTextDirection } from './TextDirectionContext';\nimport { isInsideComponent } from './utils/isInsideComponent';\n\nexport function makeResetStyles(styles: GriffelResetStyle) {\n  const getStyles = vanillaMakeResetStyles(styles, insertionFactory);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (isInsideComponent()) {\n      throw new Error(\n        [\n          \"makeResetStyles(): this function cannot be called in component's scope.\",\n          'All makeResetStyles() calls should be top level i.e. in a root scope of a file.',\n        ].join(' '),\n      );\n    }\n  }\n\n  return function useClassName(): string {\n    const dir = useTextDirection();\n    const renderer = useRenderer();\n\n    return getStyles({ dir, renderer });\n  };\n}\n"],"names":["makeResetStyles","styles","getStyles","vanillaMakeResetStyles","insertionFactory","process","env","NODE_ENV","isInsideComponent","Error","join","useClassName","dir","useTextDirection","renderer","useRenderer"],"mappings":";;;;;;AAQM,SAAUA,eAAeA,CAACC,MAAyB,EAAA;AACvD,EAAA,MAAMC,SAAS,GAAGC,iBAAsB,CAACF,MAAM,EAAEG,gBAAgB,CAAC;AAElE,EAAA,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACzC,IAAIC,iBAAiB,EAAE,EAAE;AACvB,MAAA,MAAM,IAAIC,KAAK,CACb,CACE,yEAAyE,EACzE,iFAAiF,CAClF,CAACC,IAAI,CAAC,GAAG,CAAC,CACZ;AACH;AACF;EAEA,OAAO,SAASC,YAAYA,GAAA;AAC1B,IAAA,MAAMC,GAAG,GAAGC,gBAAgB,EAAE;AAC9B,IAAA,MAAMC,QAAQ,GAAGC,WAAW,EAAE;AAE9B,IAAA,OAAOb,SAAS,CAAC;MAAEU,GAAG;AAAEE,MAAAA;AAAQ,KAAE,CAAC;GACpC;AACH;;;;"}
\ No newline at end of file
diff --git a/node_modules/@griffel/react/makeStaticStyles.cjs.js.map b/node_modules/@griffel/react/makeStaticStyles.cjs.js.map
index 7aa73b9..3a977d7 100644
--- a/node_modules/@griffel/react/makeStaticStyles.cjs.js.map
+++ b/node_modules/@griffel/react/makeStaticStyles.cjs.js.map
@@ -1 +1 @@
-{"version":3,"file":"makeStaticStyles.cjs.js","sources":["../../../packages/react/src/makeStaticStyles.ts"],"sourcesContent":["import { makeStaticStyles as vanillaMakeStaticStyles } from '@griffel/core';\nimport type { GriffelStaticStyles, MakeStaticStylesOptions } from '@griffel/core';\n\nimport { insertionFactory } from './insertionFactory';\nimport { useRenderer } from './RendererContext';\n\nexport function makeStaticStyles(styles: GriffelStaticStyles | GriffelStaticStyles[]) {\n  const getStyles = vanillaMakeStaticStyles(styles, insertionFactory);\n\n  if (process.env.NODE_ENV === 'test') {\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    return () => {};\n  }\n\n  return function useStaticStyles(): void {\n    const renderer = useRenderer();\n    const options: MakeStaticStylesOptions = { renderer };\n\n    return getStyles(options);\n  };\n}\n"],"names":["makeStaticStyles","styles","getStyles","vanillaMakeStaticStyles","insertionFactory","process","env","NODE_ENV","useStaticStyles","renderer","useRenderer","options"],"mappings":";;;;;;AAMM,SAAUA,gBAAgBA,CAACC,MAAmD,EAAA;AAClF,EAAA,MAAMC,SAAS,GAAGC,qBAAuB,CAACF,MAAM,EAAEG,iCAAgB,CAAC,CAAA;AAEnE,EAAA,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,MAAM,EAAE;AACnC;IACA,OAAO,MAAO,EAAC,CAAA;AACjB,GAAA;EAEA,OAAO,SAASC,eAAeA,GAAA;AAC7B,IAAA,MAAMC,QAAQ,GAAGC,2BAAW,EAAE,CAAA;AAC9B,IAAA,MAAMC,OAAO,GAA4B;AAAEF,MAAAA,QAAAA;KAAU,CAAA;IAErD,OAAOP,SAAS,CAACS,OAAO,CAAC,CAAA;GAC1B,CAAA;AACH;;;;"}
\ No newline at end of file
+{"version":3,"file":"makeStaticStyles.cjs.js","sources":["../../../packages/react/src/makeStaticStyles.ts"],"sourcesContent":["import { makeStaticStyles as vanillaMakeStaticStyles } from '@griffel/core';\nimport type { GriffelStaticStyles, MakeStaticStylesOptions } from '@griffel/core';\n\nimport { insertionFactory } from './insertionFactory';\nimport { useRenderer } from './RendererContext';\n\nexport function makeStaticStyles(styles: GriffelStaticStyles | GriffelStaticStyles[]) {\n  const getStyles = vanillaMakeStaticStyles(styles, insertionFactory);\n\n  if (process.env.NODE_ENV === 'test') {\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    return () => {};\n  }\n\n  return function useStaticStyles(): void {\n    const renderer = useRenderer();\n    const options: MakeStaticStylesOptions = { renderer };\n\n    return getStyles(options);\n  };\n}\n"],"names":["makeStaticStyles","styles","getStyles","vanillaMakeStaticStyles","insertionFactory","process","env","NODE_ENV","useStaticStyles","renderer","useRenderer","options"],"mappings":";;;;;;AAMM,SAAUA,gBAAgBA,CAACC,MAAmD,EAAA;AAClF,EAAA,MAAMC,SAAS,GAAGC,qBAAuB,CAACF,MAAM,EAAEG,iCAAgB,CAAC;AAEnE,EAAA,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,MAAM,EAAE;AACnC;IACA,OAAO,MAAO,EAAC;AACjB;EAEA,OAAO,SAASC,eAAeA,GAAA;AAC7B,IAAA,MAAMC,QAAQ,GAAGC,2BAAW,EAAE;AAC9B,IAAA,MAAMC,OAAO,GAA4B;AAAEF,MAAAA;KAAU;IAErD,OAAOP,SAAS,CAACS,OAAO,CAAC;GAC1B;AACH;;;;"}
\ No newline at end of file
diff --git a/node_modules/@griffel/react/makeStaticStyles.esm.js.map b/node_modules/@griffel/react/makeStaticStyles.esm.js.map
index 419c528..85ea025 100644
--- a/node_modules/@griffel/react/makeStaticStyles.esm.js.map
+++ b/node_modules/@griffel/react/makeStaticStyles.esm.js.map
@@ -1 +1 @@
-{"version":3,"file":"makeStaticStyles.esm.js","sources":["../../../packages/react/src/makeStaticStyles.ts"],"sourcesContent":["import { makeStaticStyles as vanillaMakeStaticStyles } from '@griffel/core';\nimport type { GriffelStaticStyles, MakeStaticStylesOptions } from '@griffel/core';\n\nimport { insertionFactory } from './insertionFactory';\nimport { useRenderer } from './RendererContext';\n\nexport function makeStaticStyles(styles: GriffelStaticStyles | GriffelStaticStyles[]) {\n  const getStyles = vanillaMakeStaticStyles(styles, insertionFactory);\n\n  if (process.env.NODE_ENV === 'test') {\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    return () => {};\n  }\n\n  return function useStaticStyles(): void {\n    const renderer = useRenderer();\n    const options: MakeStaticStylesOptions = { renderer };\n\n    return getStyles(options);\n  };\n}\n"],"names":["makeStaticStyles","styles","getStyles","vanillaMakeStaticStyles","insertionFactory","process","env","NODE_ENV","useStaticStyles","renderer","useRenderer","options"],"mappings":";;;;AAMM,SAAUA,gBAAgBA,CAACC,MAAmD,EAAA;AAClF,EAAA,MAAMC,SAAS,GAAGC,kBAAuB,CAACF,MAAM,EAAEG,gBAAgB,CAAC,CAAA;AAEnE,EAAA,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,MAAM,EAAE;AACnC;IACA,OAAO,MAAO,EAAC,CAAA;AACjB,GAAA;EAEA,OAAO,SAASC,eAAeA,GAAA;AAC7B,IAAA,MAAMC,QAAQ,GAAGC,WAAW,EAAE,CAAA;AAC9B,IAAA,MAAMC,OAAO,GAA4B;AAAEF,MAAAA,QAAAA;KAAU,CAAA;IAErD,OAAOP,SAAS,CAACS,OAAO,CAAC,CAAA;GAC1B,CAAA;AACH;;;;"}
\ No newline at end of file
+{"version":3,"file":"makeStaticStyles.esm.js","sources":["../../../packages/react/src/makeStaticStyles.ts"],"sourcesContent":["import { makeStaticStyles as vanillaMakeStaticStyles } from '@griffel/core';\nimport type { GriffelStaticStyles, MakeStaticStylesOptions } from '@griffel/core';\n\nimport { insertionFactory } from './insertionFactory';\nimport { useRenderer } from './RendererContext';\n\nexport function makeStaticStyles(styles: GriffelStaticStyles | GriffelStaticStyles[]) {\n  const getStyles = vanillaMakeStaticStyles(styles, insertionFactory);\n\n  if (process.env.NODE_ENV === 'test') {\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    return () => {};\n  }\n\n  return function useStaticStyles(): void {\n    const renderer = useRenderer();\n    const options: MakeStaticStylesOptions = { renderer };\n\n    return getStyles(options);\n  };\n}\n"],"names":["makeStaticStyles","styles","getStyles","vanillaMakeStaticStyles","insertionFactory","process","env","NODE_ENV","useStaticStyles","renderer","useRenderer","options"],"mappings":";;;;AAMM,SAAUA,gBAAgBA,CAACC,MAAmD,EAAA;AAClF,EAAA,MAAMC,SAAS,GAAGC,kBAAuB,CAACF,MAAM,EAAEG,gBAAgB,CAAC;AAEnE,EAAA,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,MAAM,EAAE;AACnC;IACA,OAAO,MAAO,EAAC;AACjB;EAEA,OAAO,SAASC,eAAeA,GAAA;AAC7B,IAAA,MAAMC,QAAQ,GAAGC,WAAW,EAAE;AAC9B,IAAA,MAAMC,OAAO,GAA4B;AAAEF,MAAAA;KAAU;IAErD,OAAOP,SAAS,CAACS,OAAO,CAAC;GAC1B;AACH;;;;"}
\ No newline at end of file
diff --git a/node_modules/@griffel/react/makeStyles.cjs.js.map b/node_modules/@griffel/react/makeStyles.cjs.js.map
index b123174..ff52e87 100644
--- a/node_modules/@griffel/react/makeStyles.cjs.js.map
+++ b/node_modules/@griffel/react/makeStyles.cjs.js.map
@@ -1 +1 @@
-{"version":3,"file":"makeStyles.cjs.js","sources":["../../../packages/react/src/makeStyles.ts"],"sourcesContent":["import { makeStyles as vanillaMakeStyles } from '@griffel/core';\nimport type { GriffelStyle } from '@griffel/core';\n\nimport { insertionFactory } from './insertionFactory';\nimport { useRenderer } from './RendererContext';\nimport { useTextDirection } from './TextDirectionContext';\nimport { isInsideComponent } from './utils/isInsideComponent';\n\nexport function makeStyles<Slots extends string | number>(stylesBySlots: Record<Slots, GriffelStyle>) {\n  const getStyles = vanillaMakeStyles(stylesBySlots, insertionFactory);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (isInsideComponent()) {\n      throw new Error(\n        [\n          \"makeStyles(): this function cannot be called in component's scope.\",\n          'All makeStyles() calls should be top level i.e. in a root scope of a file.',\n        ].join(' '),\n      );\n    }\n  }\n\n  return function useClasses(): Record<Slots, string> {\n    const dir = useTextDirection();\n    const renderer = useRenderer();\n\n    return getStyles({ dir, renderer });\n  };\n}\n"],"names":["makeStyles","stylesBySlots","getStyles","vanillaMakeStyles","insertionFactory","process","env","NODE_ENV","isInsideComponent","Error","join","useClasses","dir","useTextDirection","renderer","useRenderer"],"mappings":";;;;;;;;AAQM,SAAUA,UAAUA,CAAgCC,aAA0C,EAAA;AAClG,EAAA,MAAMC,SAAS,GAAGC,eAAiB,CAACF,aAAa,EAAEG,iCAAgB,CAAC,CAAA;AAEpE,EAAA,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACzC,IAAIC,mCAAiB,EAAE,EAAE;AACvB,MAAA,MAAM,IAAIC,KAAK,CACb,CACE,oEAAoE,EACpE,4EAA4E,CAC7E,CAACC,IAAI,CAAC,GAAG,CAAC,CACZ,CAAA;AACH,KAAA;AACF,GAAA;EAEA,OAAO,SAASC,UAAUA,GAAA;AACxB,IAAA,MAAMC,GAAG,GAAGC,qCAAgB,EAAE,CAAA;AAC9B,IAAA,MAAMC,QAAQ,GAAGC,2BAAW,EAAE,CAAA;AAE9B,IAAA,OAAOb,SAAS,CAAC;MAAEU,GAAG;AAAEE,MAAAA,QAAAA;AAAQ,KAAE,CAAC,CAAA;GACpC,CAAA;AACH;;;;"}
\ No newline at end of file
+{"version":3,"file":"makeStyles.cjs.js","sources":["../../../packages/react/src/makeStyles.ts"],"sourcesContent":["import { makeStyles as vanillaMakeStyles } from '@griffel/core';\nimport type { GriffelStyle } from '@griffel/core';\n\nimport { insertionFactory } from './insertionFactory';\nimport { useRenderer } from './RendererContext';\nimport { useTextDirection } from './TextDirectionContext';\nimport { isInsideComponent } from './utils/isInsideComponent';\n\nexport function makeStyles<Slots extends string | number>(stylesBySlots: Record<Slots, GriffelStyle>) {\n  const getStyles = vanillaMakeStyles(stylesBySlots, insertionFactory);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (isInsideComponent()) {\n      throw new Error(\n        [\n          \"makeStyles(): this function cannot be called in component's scope.\",\n          'All makeStyles() calls should be top level i.e. in a root scope of a file.',\n        ].join(' '),\n      );\n    }\n  }\n\n  return function useClasses(): Record<Slots, string> {\n    const dir = useTextDirection();\n    const renderer = useRenderer();\n\n    return getStyles({ dir, renderer });\n  };\n}\n"],"names":["makeStyles","stylesBySlots","getStyles","vanillaMakeStyles","insertionFactory","process","env","NODE_ENV","isInsideComponent","Error","join","useClasses","dir","useTextDirection","renderer","useRenderer"],"mappings":";;;;;;;;AAQM,SAAUA,UAAUA,CAAgCC,aAA0C,EAAA;AAClG,EAAA,MAAMC,SAAS,GAAGC,eAAiB,CAACF,aAAa,EAAEG,iCAAgB,CAAC;AAEpE,EAAA,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACzC,IAAIC,mCAAiB,EAAE,EAAE;AACvB,MAAA,MAAM,IAAIC,KAAK,CACb,CACE,oEAAoE,EACpE,4EAA4E,CAC7E,CAACC,IAAI,CAAC,GAAG,CAAC,CACZ;AACH;AACF;EAEA,OAAO,SAASC,UAAUA,GAAA;AACxB,IAAA,MAAMC,GAAG,GAAGC,qCAAgB,EAAE;AAC9B,IAAA,MAAMC,QAAQ,GAAGC,2BAAW,EAAE;AAE9B,IAAA,OAAOb,SAAS,CAAC;MAAEU,GAAG;AAAEE,MAAAA;AAAQ,KAAE,CAAC;GACpC;AACH;;;;"}
\ No newline at end of file
diff --git a/node_modules/@griffel/react/makeStyles.esm.js.map b/node_modules/@griffel/react/makeStyles.esm.js.map
index 86e0b06..c4e8306 100644
--- a/node_modules/@griffel/react/makeStyles.esm.js.map
+++ b/node_modules/@griffel/react/makeStyles.esm.js.map
@@ -1 +1 @@
-{"version":3,"file":"makeStyles.esm.js","sources":["../../../packages/react/src/makeStyles.ts"],"sourcesContent":["import { makeStyles as vanillaMakeStyles } from '@griffel/core';\nimport type { GriffelStyle } from '@griffel/core';\n\nimport { insertionFactory } from './insertionFactory';\nimport { useRenderer } from './RendererContext';\nimport { useTextDirection } from './TextDirectionContext';\nimport { isInsideComponent } from './utils/isInsideComponent';\n\nexport function makeStyles<Slots extends string | number>(stylesBySlots: Record<Slots, GriffelStyle>) {\n  const getStyles = vanillaMakeStyles(stylesBySlots, insertionFactory);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (isInsideComponent()) {\n      throw new Error(\n        [\n          \"makeStyles(): this function cannot be called in component's scope.\",\n          'All makeStyles() calls should be top level i.e. in a root scope of a file.',\n        ].join(' '),\n      );\n    }\n  }\n\n  return function useClasses(): Record<Slots, string> {\n    const dir = useTextDirection();\n    const renderer = useRenderer();\n\n    return getStyles({ dir, renderer });\n  };\n}\n"],"names":["makeStyles","stylesBySlots","getStyles","vanillaMakeStyles","insertionFactory","process","env","NODE_ENV","isInsideComponent","Error","join","useClasses","dir","useTextDirection","renderer","useRenderer"],"mappings":";;;;;;AAQM,SAAUA,UAAUA,CAAgCC,aAA0C,EAAA;AAClG,EAAA,MAAMC,SAAS,GAAGC,YAAiB,CAACF,aAAa,EAAEG,gBAAgB,CAAC,CAAA;AAEpE,EAAA,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACzC,IAAIC,iBAAiB,EAAE,EAAE;AACvB,MAAA,MAAM,IAAIC,KAAK,CACb,CACE,oEAAoE,EACpE,4EAA4E,CAC7E,CAACC,IAAI,CAAC,GAAG,CAAC,CACZ,CAAA;AACH,KAAA;AACF,GAAA;EAEA,OAAO,SAASC,UAAUA,GAAA;AACxB,IAAA,MAAMC,GAAG,GAAGC,gBAAgB,EAAE,CAAA;AAC9B,IAAA,MAAMC,QAAQ,GAAGC,WAAW,EAAE,CAAA;AAE9B,IAAA,OAAOb,SAAS,CAAC;MAAEU,GAAG;AAAEE,MAAAA,QAAAA;AAAQ,KAAE,CAAC,CAAA;GACpC,CAAA;AACH;;;;"}
\ No newline at end of file
+{"version":3,"file":"makeStyles.esm.js","sources":["../../../packages/react/src/makeStyles.ts"],"sourcesContent":["import { makeStyles as vanillaMakeStyles } from '@griffel/core';\nimport type { GriffelStyle } from '@griffel/core';\n\nimport { insertionFactory } from './insertionFactory';\nimport { useRenderer } from './RendererContext';\nimport { useTextDirection } from './TextDirectionContext';\nimport { isInsideComponent } from './utils/isInsideComponent';\n\nexport function makeStyles<Slots extends string | number>(stylesBySlots: Record<Slots, GriffelStyle>) {\n  const getStyles = vanillaMakeStyles(stylesBySlots, insertionFactory);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (isInsideComponent()) {\n      throw new Error(\n        [\n          \"makeStyles(): this function cannot be called in component's scope.\",\n          'All makeStyles() calls should be top level i.e. in a root scope of a file.',\n        ].join(' '),\n      );\n    }\n  }\n\n  return function useClasses(): Record<Slots, string> {\n    const dir = useTextDirection();\n    const renderer = useRenderer();\n\n    return getStyles({ dir, renderer });\n  };\n}\n"],"names":["makeStyles","stylesBySlots","getStyles","vanillaMakeStyles","insertionFactory","process","env","NODE_ENV","isInsideComponent","Error","join","useClasses","dir","useTextDirection","renderer","useRenderer"],"mappings":";;;;;;AAQM,SAAUA,UAAUA,CAAgCC,aAA0C,EAAA;AAClG,EAAA,MAAMC,SAAS,GAAGC,YAAiB,CAACF,aAAa,EAAEG,gBAAgB,CAAC;AAEpE,EAAA,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACzC,IAAIC,iBAAiB,EAAE,EAAE;AACvB,MAAA,MAAM,IAAIC,KAAK,CACb,CACE,oEAAoE,EACpE,4EAA4E,CAC7E,CAACC,IAAI,CAAC,GAAG,CAAC,CACZ;AACH;AACF;EAEA,OAAO,SAASC,UAAUA,GAAA;AACxB,IAAA,MAAMC,GAAG,GAAGC,gBAAgB,EAAE;AAC9B,IAAA,MAAMC,QAAQ,GAAGC,WAAW,EAAE;AAE9B,IAAA,OAAOb,SAAS,CAAC;MAAEU,GAAG;AAAEE,MAAAA;AAAQ,KAAE,CAAC;GACpC;AACH;;;;"}
\ No newline at end of file
diff --git a/node_modules/@griffel/react/renderToStyleElements.cjs.js.map b/node_modules/@griffel/react/renderToStyleElements.cjs.js.map
index c4b2da2..6e4ed9d 100644
--- a/node_modules/@griffel/react/renderToStyleElements.cjs.js.map
+++ b/node_modules/@griffel/react/renderToStyleElements.cjs.js.map
@@ -1 +1 @@
-{"version":3,"file":"renderToStyleElements.cjs.js","sources":["../../../packages/react/src/renderToStyleElements.ts"],"sourcesContent":["import { styleBucketOrdering } from '@griffel/core';\nimport * as React from 'react';\nimport type { GriffelRenderer } from '@griffel/core';\n\n/**\n * This method returns a list of <style> React elements with the rendered CSS. This is useful for Server-Side rendering.\n *\n * @public\n */\nexport function renderToStyleElements(renderer: GriffelRenderer): React.ReactElement[] {\n  const stylesheets = Object.values(renderer.stylesheets)\n    // first sort: bucket names\n    .sort((a, b) => {\n      return styleBucketOrdering.indexOf(a.bucketName) - styleBucketOrdering.indexOf(b.bucketName);\n    })\n    // second sort: media queries\n    .sort((a, b) => {\n      const mediaA = a.elementAttributes['media'];\n      const mediaB = b.elementAttributes['media'];\n\n      if (mediaA && mediaB) {\n        return renderer.compareMediaQueries(mediaA, mediaB);\n      }\n\n      if (mediaA || mediaB) {\n        return mediaA ? 1 : -1;\n      }\n\n      return 0;\n    });\n\n  return stylesheets\n    .map(stylesheet => {\n      const cssRules = stylesheet.cssRules();\n      // don't want to create any empty style elements\n      if (!cssRules.length) {\n        return null;\n      }\n\n      return React.createElement('style', {\n        key: stylesheet.bucketName,\n\n        // TODO: support \"nonce\"\n        // ...renderer.styleNodeAttributes,\n        ...stylesheet.elementAttributes,\n        'data-make-styles-rehydration': 'true',\n\n        dangerouslySetInnerHTML: {\n          __html: cssRules.join(''),\n        },\n      });\n    })\n    .filter(Boolean) as React.ReactElement[];\n}\n"],"names":["renderToStyleElements","renderer","stylesheets","Object","values","sort","a","b","styleBucketOrdering","indexOf","bucketName","mediaA","elementAttributes","mediaB","compareMediaQueries","map","stylesheet","cssRules","length","React","createElement","assign","key","dangerouslySetInnerHTML","__html","join","filter","Boolean"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAIA;;;;AAIG;AACG,SAAUA,qBAAqBA,CAACC,QAAyB,EAAA;EAC7D,MAAMC,WAAW,GAAGC,MAAM,CAACC,MAAM,CAACH,QAAQ,CAACC,WAAW,CAAA;AACpD;AAAA,GACCG,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAI;AACb,IAAA,OAAOC,wBAAmB,CAACC,OAAO,CAACH,CAAC,CAACI,UAAU,CAAC,GAAGF,wBAAmB,CAACC,OAAO,CAACF,CAAC,CAACG,UAAU,CAAC,CAAA;GAC7F,CAAA;AACD;AAAA,GACCL,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAI;AACb,IAAA,MAAMI,MAAM,GAAGL,CAAC,CAACM,iBAAiB,CAAC,OAAO,CAAC,CAAA;AAC3C,IAAA,MAAMC,MAAM,GAAGN,CAAC,CAACK,iBAAiB,CAAC,OAAO,CAAC,CAAA;IAE3C,IAAID,MAAM,IAAIE,MAAM,EAAE;AACpB,MAAA,OAAOZ,QAAQ,CAACa,mBAAmB,CAACH,MAAM,EAAEE,MAAM,CAAC,CAAA;AACrD,KAAA;IAEA,IAAIF,MAAM,IAAIE,MAAM,EAAE;AACpB,MAAA,OAAOF,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,CAAA;AACxB,KAAA;AAEA,IAAA,OAAO,CAAC,CAAA;AACV,GAAC,CAAC,CAAA;AAEJ,EAAA,OAAOT,WAAW,CACfa,GAAG,CAACC,UAAU,IAAG;AAChB,IAAA,MAAMC,QAAQ,GAAGD,UAAU,CAACC,QAAQ,EAAE,CAAA;AACtC;AACA,IAAA,IAAI,CAACA,QAAQ,CAACC,MAAM,EAAE;AACpB,MAAA,OAAO,IAAI,CAAA;AACb,KAAA;IAEA,oBAAOC,gBAAK,CAACC,aAAa,CAAC,OAAO,EAAAjB,MAAA,CAAAkB,MAAA,CAAA;MAChCC,GAAG,EAAEN,UAAU,CAACN,UAAAA;KAIbM,EAAAA,UAAU,CAACJ,iBAAiB,EAAA;AAC/B,MAAA,8BAA8B,EAAE,MAAM;AAEtCW,MAAAA,uBAAuB,EAAE;AACvBC,QAAAA,MAAM,EAAEP,QAAQ,CAACQ,IAAI,CAAC,EAAE,CAAA;AACzB,OAAA;AAAA,KAAA,CACF,CAAC,CAAA;AACJ,GAAC,CAAC,CACDC,MAAM,CAACC,OAAO,CAAyB,CAAA;AAC5C;;;;"}
\ No newline at end of file
+{"version":3,"file":"renderToStyleElements.cjs.js","sources":["../../../packages/react/src/renderToStyleElements.ts"],"sourcesContent":["import { styleBucketOrdering } from '@griffel/core';\nimport * as React from 'react';\nimport type { GriffelRenderer } from '@griffel/core';\n\n/**\n * This method returns a list of <style> React elements with the rendered CSS. This is useful for Server-Side rendering.\n *\n * @public\n */\nexport function renderToStyleElements(renderer: GriffelRenderer): React.ReactElement[] {\n  const stylesheets = Object.values(renderer.stylesheets)\n    // first sort: bucket names\n    .sort((a, b) => {\n      return styleBucketOrdering.indexOf(a.bucketName) - styleBucketOrdering.indexOf(b.bucketName);\n    })\n    // second sort: media queries\n    .sort((a, b) => {\n      const mediaA = a.elementAttributes['media'];\n      const mediaB = b.elementAttributes['media'];\n\n      if (mediaA && mediaB) {\n        return renderer.compareMediaQueries(mediaA, mediaB);\n      }\n\n      if (mediaA || mediaB) {\n        return mediaA ? 1 : -1;\n      }\n\n      return 0;\n    });\n\n  return stylesheets\n    .map(stylesheet => {\n      const cssRules = stylesheet.cssRules();\n      // don't want to create any empty style elements\n      if (!cssRules.length) {\n        return null;\n      }\n\n      return React.createElement('style', {\n        key: stylesheet.bucketName,\n\n        // TODO: support \"nonce\"\n        // ...renderer.styleNodeAttributes,\n        ...stylesheet.elementAttributes,\n        'data-make-styles-rehydration': 'true',\n\n        dangerouslySetInnerHTML: {\n          __html: cssRules.join(''),\n        },\n      });\n    })\n    .filter(Boolean) as React.ReactElement[];\n}\n"],"names":["renderToStyleElements","renderer","stylesheets","Object","values","sort","a","b","styleBucketOrdering","indexOf","bucketName","mediaA","elementAttributes","mediaB","compareMediaQueries","map","stylesheet","cssRules","length","React","createElement","assign","key","dangerouslySetInnerHTML","__html","join","filter","Boolean"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAIA;;;;AAIG;AACG,SAAUA,qBAAqBA,CAACC,QAAyB,EAAA;EAC7D,MAAMC,WAAW,GAAGC,MAAM,CAACC,MAAM,CAACH,QAAQ,CAACC,WAAW;AACpD;AAAA,GACCG,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAI;AACb,IAAA,OAAOC,wBAAmB,CAACC,OAAO,CAACH,CAAC,CAACI,UAAU,CAAC,GAAGF,wBAAmB,CAACC,OAAO,CAACF,CAAC,CAACG,UAAU,CAAC;GAC7F;AACD;AAAA,GACCL,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAI;AACb,IAAA,MAAMI,MAAM,GAAGL,CAAC,CAACM,iBAAiB,CAAC,OAAO,CAAC;AAC3C,IAAA,MAAMC,MAAM,GAAGN,CAAC,CAACK,iBAAiB,CAAC,OAAO,CAAC;IAE3C,IAAID,MAAM,IAAIE,MAAM,EAAE;AACpB,MAAA,OAAOZ,QAAQ,CAACa,mBAAmB,CAACH,MAAM,EAAEE,MAAM,CAAC;AACrD;IAEA,IAAIF,MAAM,IAAIE,MAAM,EAAE;AACpB,MAAA,OAAOF,MAAM,GAAG,CAAC,GAAG,EAAE;AACxB;AAEA,IAAA,OAAO,CAAC;AACV,GAAC,CAAC;AAEJ,EAAA,OAAOT,WAAW,CACfa,GAAG,CAACC,UAAU,IAAG;AAChB,IAAA,MAAMC,QAAQ,GAAGD,UAAU,CAACC,QAAQ,EAAE;AACtC;AACA,IAAA,IAAI,CAACA,QAAQ,CAACC,MAAM,EAAE;AACpB,MAAA,OAAO,IAAI;AACb;IAEA,oBAAOC,gBAAK,CAACC,aAAa,CAAC,OAAO,EAAAjB,MAAA,CAAAkB,MAAA,CAAA;MAChCC,GAAG,EAAEN,UAAU,CAACN;KAIbM,EAAAA,UAAU,CAACJ,iBAAiB,EAAA;AAC/B,MAAA,8BAA8B,EAAE,MAAM;AAEtCW,MAAAA,uBAAuB,EAAE;AACvBC,QAAAA,MAAM,EAAEP,QAAQ,CAACQ,IAAI,CAAC,EAAE;AACzB;AAAA,KAAA,CACF,CAAC;AACJ,GAAC,CAAC,CACDC,MAAM,CAACC,OAAO,CAAyB;AAC5C;;;;"}
\ No newline at end of file
diff --git a/node_modules/@griffel/react/renderToStyleElements.esm.js.map b/node_modules/@griffel/react/renderToStyleElements.esm.js.map
index 3faea0c..c519fb1 100644
--- a/node_modules/@griffel/react/renderToStyleElements.esm.js.map
+++ b/node_modules/@griffel/react/renderToStyleElements.esm.js.map
@@ -1 +1 @@
-{"version":3,"file":"renderToStyleElements.esm.js","sources":["../../../packages/react/src/renderToStyleElements.ts"],"sourcesContent":["import { styleBucketOrdering } from '@griffel/core';\nimport * as React from 'react';\nimport type { GriffelRenderer } from '@griffel/core';\n\n/**\n * This method returns a list of <style> React elements with the rendered CSS. This is useful for Server-Side rendering.\n *\n * @public\n */\nexport function renderToStyleElements(renderer: GriffelRenderer): React.ReactElement[] {\n  const stylesheets = Object.values(renderer.stylesheets)\n    // first sort: bucket names\n    .sort((a, b) => {\n      return styleBucketOrdering.indexOf(a.bucketName) - styleBucketOrdering.indexOf(b.bucketName);\n    })\n    // second sort: media queries\n    .sort((a, b) => {\n      const mediaA = a.elementAttributes['media'];\n      const mediaB = b.elementAttributes['media'];\n\n      if (mediaA && mediaB) {\n        return renderer.compareMediaQueries(mediaA, mediaB);\n      }\n\n      if (mediaA || mediaB) {\n        return mediaA ? 1 : -1;\n      }\n\n      return 0;\n    });\n\n  return stylesheets\n    .map(stylesheet => {\n      const cssRules = stylesheet.cssRules();\n      // don't want to create any empty style elements\n      if (!cssRules.length) {\n        return null;\n      }\n\n      return React.createElement('style', {\n        key: stylesheet.bucketName,\n\n        // TODO: support \"nonce\"\n        // ...renderer.styleNodeAttributes,\n        ...stylesheet.elementAttributes,\n        'data-make-styles-rehydration': 'true',\n\n        dangerouslySetInnerHTML: {\n          __html: cssRules.join(''),\n        },\n      });\n    })\n    .filter(Boolean) as React.ReactElement[];\n}\n"],"names":["renderToStyleElements","renderer","stylesheets","Object","values","sort","a","b","styleBucketOrdering","indexOf","bucketName","mediaA","elementAttributes","mediaB","compareMediaQueries","map","stylesheet","cssRules","length","React","createElement","assign","key","dangerouslySetInnerHTML","__html","join","filter","Boolean"],"mappings":";;;AAIA;;;;AAIG;AACG,SAAUA,qBAAqBA,CAACC,QAAyB,EAAA;EAC7D,MAAMC,WAAW,GAAGC,MAAM,CAACC,MAAM,CAACH,QAAQ,CAACC,WAAW,CAAA;AACpD;AAAA,GACCG,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAI;AACb,IAAA,OAAOC,mBAAmB,CAACC,OAAO,CAACH,CAAC,CAACI,UAAU,CAAC,GAAGF,mBAAmB,CAACC,OAAO,CAACF,CAAC,CAACG,UAAU,CAAC,CAAA;GAC7F,CAAA;AACD;AAAA,GACCL,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAI;AACb,IAAA,MAAMI,MAAM,GAAGL,CAAC,CAACM,iBAAiB,CAAC,OAAO,CAAC,CAAA;AAC3C,IAAA,MAAMC,MAAM,GAAGN,CAAC,CAACK,iBAAiB,CAAC,OAAO,CAAC,CAAA;IAE3C,IAAID,MAAM,IAAIE,MAAM,EAAE;AACpB,MAAA,OAAOZ,QAAQ,CAACa,mBAAmB,CAACH,MAAM,EAAEE,MAAM,CAAC,CAAA;AACrD,KAAA;IAEA,IAAIF,MAAM,IAAIE,MAAM,EAAE;AACpB,MAAA,OAAOF,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,CAAA;AACxB,KAAA;AAEA,IAAA,OAAO,CAAC,CAAA;AACV,GAAC,CAAC,CAAA;AAEJ,EAAA,OAAOT,WAAW,CACfa,GAAG,CAACC,UAAU,IAAG;AAChB,IAAA,MAAMC,QAAQ,GAAGD,UAAU,CAACC,QAAQ,EAAE,CAAA;AACtC;AACA,IAAA,IAAI,CAACA,QAAQ,CAACC,MAAM,EAAE;AACpB,MAAA,OAAO,IAAI,CAAA;AACb,KAAA;IAEA,oBAAOC,KAAK,CAACC,aAAa,CAAC,OAAO,EAAAjB,MAAA,CAAAkB,MAAA,CAAA;MAChCC,GAAG,EAAEN,UAAU,CAACN,UAAAA;KAIbM,EAAAA,UAAU,CAACJ,iBAAiB,EAAA;AAC/B,MAAA,8BAA8B,EAAE,MAAM;AAEtCW,MAAAA,uBAAuB,EAAE;AACvBC,QAAAA,MAAM,EAAEP,QAAQ,CAACQ,IAAI,CAAC,EAAE,CAAA;AACzB,OAAA;AAAA,KAAA,CACF,CAAC,CAAA;AACJ,GAAC,CAAC,CACDC,MAAM,CAACC,OAAO,CAAyB,CAAA;AAC5C;;;;"}
\ No newline at end of file
+{"version":3,"file":"renderToStyleElements.esm.js","sources":["../../../packages/react/src/renderToStyleElements.ts"],"sourcesContent":["import { styleBucketOrdering } from '@griffel/core';\nimport * as React from 'react';\nimport type { GriffelRenderer } from '@griffel/core';\n\n/**\n * This method returns a list of <style> React elements with the rendered CSS. This is useful for Server-Side rendering.\n *\n * @public\n */\nexport function renderToStyleElements(renderer: GriffelRenderer): React.ReactElement[] {\n  const stylesheets = Object.values(renderer.stylesheets)\n    // first sort: bucket names\n    .sort((a, b) => {\n      return styleBucketOrdering.indexOf(a.bucketName) - styleBucketOrdering.indexOf(b.bucketName);\n    })\n    // second sort: media queries\n    .sort((a, b) => {\n      const mediaA = a.elementAttributes['media'];\n      const mediaB = b.elementAttributes['media'];\n\n      if (mediaA && mediaB) {\n        return renderer.compareMediaQueries(mediaA, mediaB);\n      }\n\n      if (mediaA || mediaB) {\n        return mediaA ? 1 : -1;\n      }\n\n      return 0;\n    });\n\n  return stylesheets\n    .map(stylesheet => {\n      const cssRules = stylesheet.cssRules();\n      // don't want to create any empty style elements\n      if (!cssRules.length) {\n        return null;\n      }\n\n      return React.createElement('style', {\n        key: stylesheet.bucketName,\n\n        // TODO: support \"nonce\"\n        // ...renderer.styleNodeAttributes,\n        ...stylesheet.elementAttributes,\n        'data-make-styles-rehydration': 'true',\n\n        dangerouslySetInnerHTML: {\n          __html: cssRules.join(''),\n        },\n      });\n    })\n    .filter(Boolean) as React.ReactElement[];\n}\n"],"names":["renderToStyleElements","renderer","stylesheets","Object","values","sort","a","b","styleBucketOrdering","indexOf","bucketName","mediaA","elementAttributes","mediaB","compareMediaQueries","map","stylesheet","cssRules","length","React","createElement","assign","key","dangerouslySetInnerHTML","__html","join","filter","Boolean"],"mappings":";;;AAIA;;;;AAIG;AACG,SAAUA,qBAAqBA,CAACC,QAAyB,EAAA;EAC7D,MAAMC,WAAW,GAAGC,MAAM,CAACC,MAAM,CAACH,QAAQ,CAACC,WAAW;AACpD;AAAA,GACCG,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAI;AACb,IAAA,OAAOC,mBAAmB,CAACC,OAAO,CAACH,CAAC,CAACI,UAAU,CAAC,GAAGF,mBAAmB,CAACC,OAAO,CAACF,CAAC,CAACG,UAAU,CAAC;GAC7F;AACD;AAAA,GACCL,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAI;AACb,IAAA,MAAMI,MAAM,GAAGL,CAAC,CAACM,iBAAiB,CAAC,OAAO,CAAC;AAC3C,IAAA,MAAMC,MAAM,GAAGN,CAAC,CAACK,iBAAiB,CAAC,OAAO,CAAC;IAE3C,IAAID,MAAM,IAAIE,MAAM,EAAE;AACpB,MAAA,OAAOZ,QAAQ,CAACa,mBAAmB,CAACH,MAAM,EAAEE,MAAM,CAAC;AACrD;IAEA,IAAIF,MAAM,IAAIE,MAAM,EAAE;AACpB,MAAA,OAAOF,MAAM,GAAG,CAAC,GAAG,EAAE;AACxB;AAEA,IAAA,OAAO,CAAC;AACV,GAAC,CAAC;AAEJ,EAAA,OAAOT,WAAW,CACfa,GAAG,CAACC,UAAU,IAAG;AAChB,IAAA,MAAMC,QAAQ,GAAGD,UAAU,CAACC,QAAQ,EAAE;AACtC;AACA,IAAA,IAAI,CAACA,QAAQ,CAACC,MAAM,EAAE;AACpB,MAAA,OAAO,IAAI;AACb;IAEA,oBAAOC,KAAK,CAACC,aAAa,CAAC,OAAO,EAAAjB,MAAA,CAAAkB,MAAA,CAAA;MAChCC,GAAG,EAAEN,UAAU,CAACN;KAIbM,EAAAA,UAAU,CAACJ,iBAAiB,EAAA;AAC/B,MAAA,8BAA8B,EAAE,MAAM;AAEtCW,MAAAA,uBAAuB,EAAE;AACvBC,QAAAA,MAAM,EAAEP,QAAQ,CAACQ,IAAI,CAAC,EAAE;AACzB;AAAA,KAAA,CACF,CAAC;AACJ,GAAC,CAAC,CACDC,MAAM,CAACC,OAAO,CAAyB;AAC5C;;;;"}
\ No newline at end of file
diff --git a/node_modules/@griffel/react/utils/canUseDOM.cjs.js.map b/node_modules/@griffel/react/utils/canUseDOM.cjs.js.map
index 422df3b..4bbdb17 100644
--- a/node_modules/@griffel/react/utils/canUseDOM.cjs.js.map
+++ b/node_modules/@griffel/react/utils/canUseDOM.cjs.js.map
@@ -1 +1 @@
-{"version":3,"file":"canUseDOM.cjs.js","sources":["../../../../packages/react/src/utils/canUseDOM.ts"],"sourcesContent":["/**\n * Verifies if an application can use DOM.\n */\nexport function canUseDOM(): boolean {\n  return typeof window !== 'undefined' && !!(window.document && window.document.createElement);\n}\n"],"names":["canUseDOM","window","document","createElement"],"mappings":";;AAAA;;AAEG;SACaA,SAASA,GAAA;AACvB,EAAA,OAAO,OAAOC,MAAM,KAAK,WAAW,IAAI,CAAC,EAAEA,MAAM,CAACC,QAAQ,IAAID,MAAM,CAACC,QAAQ,CAACC,aAAa,CAAC,CAAA;AAC9F;;;;"}
\ No newline at end of file
+{"version":3,"file":"canUseDOM.cjs.js","sources":["../../../../packages/react/src/utils/canUseDOM.ts"],"sourcesContent":["/**\n * Verifies if an application can use DOM.\n */\nexport function canUseDOM(): boolean {\n  return typeof window !== 'undefined' && !!(window.document && window.document.createElement);\n}\n"],"names":["canUseDOM","window","document","createElement"],"mappings":";;AAAA;;AAEG;SACaA,SAASA,GAAA;AACvB,EAAA,OAAO,OAAOC,MAAM,KAAK,WAAW,IAAI,CAAC,EAAEA,MAAM,CAACC,QAAQ,IAAID,MAAM,CAACC,QAAQ,CAACC,aAAa,CAAC;AAC9F;;;;"}
\ No newline at end of file
diff --git a/node_modules/@griffel/react/utils/canUseDOM.esm.js.map b/node_modules/@griffel/react/utils/canUseDOM.esm.js.map
index c0d6ae5..e38b9c3 100644
--- a/node_modules/@griffel/react/utils/canUseDOM.esm.js.map
+++ b/node_modules/@griffel/react/utils/canUseDOM.esm.js.map
@@ -1 +1 @@
-{"version":3,"file":"canUseDOM.esm.js","sources":["../../../../packages/react/src/utils/canUseDOM.ts"],"sourcesContent":["/**\n * Verifies if an application can use DOM.\n */\nexport function canUseDOM(): boolean {\n  return typeof window !== 'undefined' && !!(window.document && window.document.createElement);\n}\n"],"names":["canUseDOM","window","document","createElement"],"mappings":"AAAA;;AAEG;SACaA,SAASA,GAAA;AACvB,EAAA,OAAO,OAAOC,MAAM,KAAK,WAAW,IAAI,CAAC,EAAEA,MAAM,CAACC,QAAQ,IAAID,MAAM,CAACC,QAAQ,CAACC,aAAa,CAAC,CAAA;AAC9F;;;;"}
\ No newline at end of file
+{"version":3,"file":"canUseDOM.esm.js","sources":["../../../../packages/react/src/utils/canUseDOM.ts"],"sourcesContent":["/**\n * Verifies if an application can use DOM.\n */\nexport function canUseDOM(): boolean {\n  return typeof window !== 'undefined' && !!(window.document && window.document.createElement);\n}\n"],"names":["canUseDOM","window","document","createElement"],"mappings":"AAAA;;AAEG;SACaA,SAASA,GAAA;AACvB,EAAA,OAAO,OAAOC,MAAM,KAAK,WAAW,IAAI,CAAC,EAAEA,MAAM,CAACC,QAAQ,IAAID,MAAM,CAACC,QAAQ,CAACC,aAAa,CAAC;AAC9F;;;;"}
\ No newline at end of file
diff --git a/node_modules/@griffel/react/utils/isInsideComponent.cjs.js.map b/node_modules/@griffel/react/utils/isInsideComponent.cjs.js.map
index dd97176..d31b748 100644
--- a/node_modules/@griffel/react/utils/isInsideComponent.cjs.js.map
+++ b/node_modules/@griffel/react/utils/isInsideComponent.cjs.js.map
@@ -1 +1 @@
-{"version":3,"file":"isInsideComponent.cjs.js","sources":["../../../../packages/react/src/utils/isInsideComponent.ts"],"sourcesContent":["import * as React from 'react';\n\nexport function isInsideComponent() {\n  // React 18 always logs errors if a dispatcher is not present:\n  // https://github.com/facebook/react/blob/42f15b324f50d0fd98322c21646ac3013e30344a/packages/react/src/ReactHooks.js#L26-L36\n  try {\n    // @ts-expect-error \"SECRET_INTERNALS\" are not typed\n    const dispatcher = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentDispatcher.current;\n\n    // Before any React component was rendered \"dispatcher\" will be \"null\"\n    if (dispatcher === null || dispatcher === undefined) {\n      return false;\n    }\n\n    // A check with hooks call (i.e. call \"React.useContext()\" outside a component) will always produce errors, but\n    // a call on the dispatcher wont\n    dispatcher.useContext({});\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n"],"names":["isInsideComponent","dispatcher","React","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentDispatcher","current","undefined","useContext","e"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;SAEgBA,iBAAiBA,GAAA;AAC/B;AACA;EACA,IAAI;AACF;IACA,MAAMC,UAAU,GAAGC,gBAAK,CAACC,kDAAkD,CAACC,sBAAsB,CAACC,OAAO,CAAA;AAE1G;AACA,IAAA,IAAIJ,UAAU,KAAK,IAAI,IAAIA,UAAU,KAAKK,SAAS,EAAE;AACnD,MAAA,OAAO,KAAK,CAAA;AACd,KAAA;AAEA;AACA;AACAL,IAAAA,UAAU,CAACM,UAAU,CAAC,EAAE,CAAC,CAAA;AACzB,IAAA,OAAO,IAAI,CAAA;GACZ,CAAC,OAAOC,CAAC,EAAE;AACV,IAAA,OAAO,KAAK,CAAA;AACd,GAAA;AACF;;;;"}
\ No newline at end of file
+{"version":3,"file":"isInsideComponent.cjs.js","sources":["../../../../packages/react/src/utils/isInsideComponent.ts"],"sourcesContent":["import * as React from 'react';\n\nexport function isInsideComponent() {\n  // React 18 always logs errors if a dispatcher is not present:\n  // https://github.com/facebook/react/blob/42f15b324f50d0fd98322c21646ac3013e30344a/packages/react/src/ReactHooks.js#L26-L36\n  try {\n    // @ts-expect-error \"SECRET_INTERNALS\" are not typed\n    const dispatcher = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentDispatcher.current;\n\n    // Before any React component was rendered \"dispatcher\" will be \"null\"\n    if (dispatcher === null || dispatcher === undefined) {\n      return false;\n    }\n\n    // A check with hooks call (i.e. call \"React.useContext()\" outside a component) will always produce errors, but\n    // a call on the dispatcher wont\n    dispatcher.useContext({});\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n"],"names":["isInsideComponent","dispatcher","React","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentDispatcher","current","undefined","useContext","e"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;SAEgBA,iBAAiBA,GAAA;AAC/B;AACA;EACA,IAAI;AACF;IACA,MAAMC,UAAU,GAAGC,gBAAK,CAACC,kDAAkD,CAACC,sBAAsB,CAACC,OAAO;AAE1G;AACA,IAAA,IAAIJ,UAAU,KAAK,IAAI,IAAIA,UAAU,KAAKK,SAAS,EAAE;AACnD,MAAA,OAAO,KAAK;AACd;AAEA;AACA;AACAL,IAAAA,UAAU,CAACM,UAAU,CAAC,EAAE,CAAC;AACzB,IAAA,OAAO,IAAI;GACZ,CAAC,OAAOC,CAAC,EAAE;AACV,IAAA,OAAO,KAAK;AACd;AACF;;;;"}
\ No newline at end of file
diff --git a/node_modules/@griffel/react/utils/isInsideComponent.esm.js b/node_modules/@griffel/react/utils/isInsideComponent.esm.js
index 79cead2..af34805 100644
--- a/node_modules/@griffel/react/utils/isInsideComponent.esm.js
+++ b/node_modules/@griffel/react/utils/isInsideComponent.esm.js
@@ -5,7 +5,7 @@ function isInsideComponent() {
   // https://github.com/facebook/react/blob/42f15b324f50d0fd98322c21646ac3013e30344a/packages/react/src/ReactHooks.js#L26-L36
   try {
     // @ts-expect-error "SECRET_INTERNALS" are not typed
-    const dispatcher = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentDispatcher.current;
+    const dispatcher = React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE?.ReactCurrentDispatcher?.current;
     // Before any React component was rendered "dispatcher" will be "null"
     if (dispatcher === null || dispatcher === undefined) {
       return false;
diff --git a/node_modules/@griffel/react/utils/isInsideComponent.esm.js.map b/node_modules/@griffel/react/utils/isInsideComponent.esm.js.map
index 616efa0..d222ead 100644
--- a/node_modules/@griffel/react/utils/isInsideComponent.esm.js.map
+++ b/node_modules/@griffel/react/utils/isInsideComponent.esm.js.map
@@ -1 +1 @@
-{"version":3,"file":"isInsideComponent.esm.js","sources":["../../../../packages/react/src/utils/isInsideComponent.ts"],"sourcesContent":["import * as React from 'react';\n\nexport function isInsideComponent() {\n  // React 18 always logs errors if a dispatcher is not present:\n  // https://github.com/facebook/react/blob/42f15b324f50d0fd98322c21646ac3013e30344a/packages/react/src/ReactHooks.js#L26-L36\n  try {\n    // @ts-expect-error \"SECRET_INTERNALS\" are not typed\n    const dispatcher = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentDispatcher.current;\n\n    // Before any React component was rendered \"dispatcher\" will be \"null\"\n    if (dispatcher === null || dispatcher === undefined) {\n      return false;\n    }\n\n    // A check with hooks call (i.e. call \"React.useContext()\" outside a component) will always produce errors, but\n    // a call on the dispatcher wont\n    dispatcher.useContext({});\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n"],"names":["isInsideComponent","dispatcher","React","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentDispatcher","current","undefined","useContext","e"],"mappings":";;SAEgBA,iBAAiBA,GAAA;AAC/B;AACA;EACA,IAAI;AACF;IACA,MAAMC,UAAU,GAAGC,KAAK,CAACC,kDAAkD,CAACC,sBAAsB,CAACC,OAAO,CAAA;AAE1G;AACA,IAAA,IAAIJ,UAAU,KAAK,IAAI,IAAIA,UAAU,KAAKK,SAAS,EAAE;AACnD,MAAA,OAAO,KAAK,CAAA;AACd,KAAA;AAEA;AACA;AACAL,IAAAA,UAAU,CAACM,UAAU,CAAC,EAAE,CAAC,CAAA;AACzB,IAAA,OAAO,IAAI,CAAA;GACZ,CAAC,OAAOC,CAAC,EAAE;AACV,IAAA,OAAO,KAAK,CAAA;AACd,GAAA;AACF;;;;"}
\ No newline at end of file
+{"version":3,"file":"isInsideComponent.esm.js","sources":["../../../../packages/react/src/utils/isInsideComponent.ts"],"sourcesContent":["import * as React from 'react';\n\nexport function isInsideComponent() {\n  // React 18 always logs errors if a dispatcher is not present:\n  // https://github.com/facebook/react/blob/42f15b324f50d0fd98322c21646ac3013e30344a/packages/react/src/ReactHooks.js#L26-L36\n  try {\n    // @ts-expect-error \"SECRET_INTERNALS\" are not typed\n    const dispatcher = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentDispatcher.current;\n\n    // Before any React component was rendered \"dispatcher\" will be \"null\"\n    if (dispatcher === null || dispatcher === undefined) {\n      return false;\n    }\n\n    // A check with hooks call (i.e. call \"React.useContext()\" outside a component) will always produce errors, but\n    // a call on the dispatcher wont\n    dispatcher.useContext({});\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n"],"names":["isInsideComponent","dispatcher","React","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentDispatcher","current","undefined","useContext","e"],"mappings":";;SAEgBA,iBAAiBA,GAAA;AAC/B;AACA;EACA,IAAI;AACF;IACA,MAAMC,UAAU,GAAGC,KAAK,CAACC,kDAAkD,CAACC,sBAAsB,CAACC,OAAO;AAE1G;AACA,IAAA,IAAIJ,UAAU,KAAK,IAAI,IAAIA,UAAU,KAAKK,SAAS,EAAE;AACnD,MAAA,OAAO,KAAK;AACd;AAEA;AACA;AACAL,IAAAA,UAAU,CAACM,UAAU,CAAC,EAAE,CAAC;AACzB,IAAA,OAAO,IAAI;GACZ,CAAC,OAAOC,CAAC,EAAE;AACV,IAAA,OAAO,KAAK;AACd;AACF;;;;"}
\ No newline at end of file
