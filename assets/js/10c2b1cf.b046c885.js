"use strict";(self.webpackChunkdocsite=self.webpackChunkdocsite||[]).push([[1914],{9423:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var a=n(5893),r=n(1151);const o={},s="Colors",i={id:"colors",title:"Colors",description:"We provide the following 3 ways to specify colors for the data series.",source:"@site/../../docs/colors.md",sourceDirName:".",slug:"/colors",permalink:"/fluentui-charting-contrib/docs/colors",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Accessibility",permalink:"/fluentui-charting-contrib/docs/Accessibility"},next:{title:"Implementing 2:1 spacing",permalink:"/fluentui-charting-contrib/docs/implementing-2-to-1-spacing"}},l={},c=[{value:"1. Use CSS colors",id:"1-use-css-colors",level:2},{value:"2. Omit color prop",id:"2-omit-color-prop",level:2},{value:"3. Use colors from palette",id:"3-use-colors-from-palette",level:2},{value:"Qualitative Color Palette",id:"qualitative-color-palette",level:3},{value:"Semantic Color Palette",id:"semantic-color-palette",level:3}];function h(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h1,{id:"colors",children:"Colors"}),"\n",(0,a.jsx)(t.p,{children:"We provide the following 3 ways to specify colors for the data series."}),"\n",(0,a.jsx)(t.h2,{id:"1-use-css-colors",children:"1. Use CSS colors"}),"\n",(0,a.jsx)(t.p,{children:"The users can supply custom colors for the data series using named colors, hex codes, RGB, HSL, and other browser-supported color formats. The users will be responsible for managing the contrast ratio between adjacent data series and adjusting the color in relation to the light and dark themes."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-js",children:"import * as React from 'react';\nimport { IChartProps, ILineChartPoints, LineChart } from '@fluentui/react-charting';\n\nconst dataSeries: ILineChartPoints[] = [\n  {\n    legend: 'Line 1',\n    data: [\n      { x: 20, y: 50 },\n      { x: 40, y: 80 },\n    ],\n    color: 'red', // #ff0000, rgb(255, 0, 0), hsl(0, 100%, 50%), etc.\n  },\n];\nconst chartData: IChartProps = {\n  chartTitle: 'Line chart',\n  lineChartData: dataSeries,\n};\n\nconst App = () => {\n  return <LineChart data={chartData} />;\n};\nexport default App;\n"})}),"\n",(0,a.jsx)(t.h2,{id:"2-omit-color-prop",children:"2. Omit color prop"}),"\n",(0,a.jsx)(t.p,{children:"The users can omit the color prop for the data series. The color will be chosen automatically from the default color palette. See below for more details on the palette."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-js",children:"import * as React from 'react';\nimport { IChartProps, ILineChartPoints, LineChart } from '@fluentui/react-charting';\n\nconst dataSeries: ILineChartPoints[] = [\n  {\n    legend: 'Line 1',\n    data: [\n      { x: 20, y: 50 },\n      { x: 40, y: 80 },\n    ],\n    // Notice the absent color prop here.\n  },\n];\nconst chartData: IChartProps = {\n  chartTitle: 'Line chart',\n  lineChartData: dataSeries,\n};\n\nconst App = () => {\n  return <LineChart data={chartData} />;\n};\nexport default App;\n"})}),"\n",(0,a.jsx)(t.h2,{id:"3-use-colors-from-palette",children:"3. Use colors from palette"}),"\n",(0,a.jsx)(t.p,{children:"The users can pick colors from our data visualization color palette, which is categorized into the following two types."}),"\n",(0,a.jsx)(t.h3,{id:"qualitative-color-palette",children:"Qualitative Color Palette"}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.img,{alt:"First 10 colors in Qualitative palette",src:n(7567).Z+"",width:"2725",height:"1690"}),"\n",(0,a.jsx)(t.img,{alt:"Second 10 colors in Qualitative palette",src:n(7379).Z+"",width:"2725",height:"1660"}),"\n",(0,a.jsx)(t.img,{alt:"Third 10 colors in Qualitative palette",src:n(7168).Z+"",width:"2725",height:"1570"}),"\n",(0,a.jsx)(t.img,{alt:"Final 10 colors in Qualitative palette",src:n(9196).Z+"",width:"2725",height:"1580"})]}),"\n",(0,a.jsxs)(t.p,{children:["Each qualitative color is distinct from the others. This type of palette is ideal for visualizations displaying categorical variables that are unrelated to one another. This is our ",(0,a.jsx)(t.strong,{children:"default color palette"}),", which totals 40 colors, including 10 base colors and 30 extension colors. We cycle through these colors sequentially to paint the data series without color."]}),"\n",(0,a.jsx)(t.p,{children:"To use colors from this palette:"}),"\n",(0,a.jsxs)(t.ol,{children:["\n",(0,a.jsxs)(t.li,{children:["Import ",(0,a.jsx)(t.code,{children:"DataVizPalette"})," from the charting package."]}),"\n",(0,a.jsxs)(t.li,{children:["Choose from the available colors like this:\n",(0,a.jsx)(t.code,{children:"DataVizPalette.color<slot_number>"}),", where ",(0,a.jsx)(t.code,{children:"slot_number"})," ranges from 1 to 40."]}),"\n"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-js",children:"import * as React from 'react';\nimport { DataVizPalette, IChartProps, ILineChartPoints, LineChart } from '@fluentui/react-charting';\n\nconst dataSeries: ILineChartPoints[] = [\n  {\n    legend: 'Line 1',\n    data: [\n      { x: 20, y: 50 },\n      { x: 40, y: 80 },\n    ],\n    color: DataVizPalette.color1, // .color2, .color3, ....., .color40\n  },\n];\nconst chartData: IChartProps = {\n  chartTitle: 'Line chart',\n  lineChartData: dataSeries,\n};\n\nconst App = () => {\n  return <LineChart data={chartData} />;\n};\nexport default App;\n"})}),"\n",(0,a.jsx)(t.h3,{id:"semantic-color-palette",children:"Semantic Color Palette"}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{alt:"Colors in Semantic palette",src:n(6635).Z+"",width:"1827",height:"1094"})}),"\n",(0,a.jsx)(t.p,{children:"Semantic color represents a clear message as well as status, such as success, error, warning, info and so on. Each color has the same basic meaning in all contexts."}),"\n",(0,a.jsx)(t.p,{children:"To use colors from this palette:"}),"\n",(0,a.jsxs)(t.ol,{children:["\n",(0,a.jsxs)(t.li,{children:["Import ",(0,a.jsx)(t.code,{children:"DataVizPalette"})," from the charting package."]}),"\n",(0,a.jsxs)(t.li,{children:["Choose from the 7 available colors like this:\n",(0,a.jsx)(t.code,{children:"DataVizPalette.<status>"}),", where ",(0,a.jsx)(t.code,{children:"status"})," can be one of the following:","\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:(0,a.jsx)(t.code,{children:"highError"})}),"\n",(0,a.jsx)(t.li,{children:(0,a.jsx)(t.code,{children:"error"})}),"\n",(0,a.jsx)(t.li,{children:(0,a.jsx)(t.code,{children:"warning"})}),"\n",(0,a.jsx)(t.li,{children:(0,a.jsx)(t.code,{children:"success"})}),"\n",(0,a.jsx)(t.li,{children:(0,a.jsx)(t.code,{children:"highSuccess"})}),"\n",(0,a.jsx)(t.li,{children:(0,a.jsx)(t.code,{children:"disabled"})}),"\n",(0,a.jsx)(t.li,{children:(0,a.jsx)(t.code,{children:"info"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-js",children:"import * as React from 'react';\nimport { DataVizPalette, IChartProps, ILineChartPoints, LineChart } from '@fluentui/react-charting';\n\nconst dataSeries: ILineChartPoints[] = [\n  {\n    legend: 'Line 1',\n    data: [\n      { x: 20, y: 50 },\n      { x: 40, y: 80 },\n    ],\n    color: DataVizPalette.info, // .success, .warning, .error, .disabled, .highSuccess, .highError\n  },\n];\nconst chartData: IChartProps = {\n  chartTitle: 'Line chart',\n  lineChartData: dataSeries,\n};\n\nconst App = () => {\n  return <LineChart data={chartData} />;\n};\nexport default App;\n"})})]})}function d(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},7567:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/1-820ffa0e1ab750b53f4bfb1a4777f025.png"},7379:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/2-c25a606701d58d66263f180ea5b6c52b.png"},7168:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/3-e9cbf635779edb3818f6fbbc7f5311c4.png"},9196:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/4-855a5c6a8fd408426c2ebaaa74407503.png"},6635:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/5-c596646b25f2fba06a739133db4f76ac.png"},1151:(e,t,n)=>{n.d(t,{Z:()=>i,a:()=>s});var a=n(7294);const r={},o=a.createContext(r);function s(e){const t=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),a.createElement(o.Provider,{value:t},e.children)}}}]);