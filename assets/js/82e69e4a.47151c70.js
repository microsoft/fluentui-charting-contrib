"use strict";(self.webpackChunkdocsite=self.webpackChunkdocsite||[]).push([[4145],{5228:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>c,toc:()=>a});var s=n(5893),i=n(1151);const r={},o="Unit test plan for Donut Chart",c={id:"Test Plans/Utilities/UnitTests",title:"Unit test plan for Donut Chart",description:"This test plan contains the list of unit testable functions which are used as a part of the Donut Chart component.",source:"@site/../../docs/Test Plans/Utilities/UnitTests.md",sourceDirName:"Test Plans/Utilities",slug:"/Test Plans/Utilities/UnitTests",permalink:"/fluentui-charting-contrib/docs/Test Plans/Utilities/UnitTests",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"TestingGuide",permalink:"/fluentui-charting-contrib/docs/Test Plans/TestingGuide"},next:{title:"ComponentTests",permalink:"/fluentui-charting-contrib/docs/Test Plans/VerticalBarChart/ComponentTests"}},d={},a=[];function l(t){const e={code:"code",h1:"h1",li:"li",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.a)(),...t.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h1,{id:"unit-test-plan-for-donut-chart",children:"Unit test plan for Donut Chart"}),"\n",(0,s.jsx)(e.p,{children:"This test plan contains the list of unit testable functions which are used as a part of the Donut Chart component."}),"\n",(0,s.jsx)(e.p,{children:"Identify the functions that can be unit tested (example, functions having calculations or getting values from Utils, etc)."}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"If required, extract the unit testable portions out of the functions which can be independently unit tested without any requirement of DOM elements."}),"\n",(0,s.jsx)(e.li,{children:"Alternatively, mock the sections that cannot be unit tested."}),"\n"]}),"\n",(0,s.jsxs)(e.table,{children:[(0,s.jsx)(e.thead,{children:(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.th,{children:"Functions"}),(0,s.jsx)(e.th,{children:"Can it be unit tested"}),(0,s.jsx)(e.th,{children:"Reason"})]})}),(0,s.jsxs)(e.tbody,{children:[(0,s.jsxs)(e.tr,{children:[(0,s.jsxs)(e.td,{children:["a. ",(0,s.jsx)(e.code,{children:"convertToLocaleString()"})]}),(0,s.jsx)(e.td,{children:"Yes"}),(0,s.jsx)(e.td,{})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsxs)(e.td,{children:["b.",(0,s.jsx)(e.code,{children:"getAccessibleDataObject()"})]}),(0,s.jsx)(e.td,{children:"Yes"}),(0,s.jsx)(e.td,{})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsxs)(e.td,{children:["c. ",(0,s.jsx)(e.code,{children:"_valueInsideDonut()"})]}),(0,s.jsx)(e.td,{children:"No"}),(0,s.jsx)(e.td,{children:"private function which can only be tested by rendering the donut chart component."})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsxs)(e.td,{children:["d. ",(0,s.jsx)(e.code,{children:"wrapTextInsideDonut()"})]}),(0,s.jsx)(e.td,{children:"No"}),(0,s.jsx)(e.td,{children:"cannot be unit tested as it requires the tspan length to be calculated using Browser Functions like getComputedTextLength()."})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsxs)(e.td,{children:["e. ",(0,s.jsx)(e.code,{children:"_computeTotalValue()"})]}),(0,s.jsx)(e.td,{children:"No"}),(0,s.jsx)(e.td,{children:"depends on the data prop passed down from the DonutChart.base to Pie during component rendering. Also since this is a private function, it can only be tested via component rendering."})]})]})]})]})}function h(t={}){const{wrapper:e}={...(0,i.a)(),...t.components};return e?(0,s.jsx)(e,{...t,children:(0,s.jsx)(l,{...t})}):l(t)}},1151:(t,e,n)=>{n.d(e,{Z:()=>c,a:()=>o});var s=n(7294);const i={},r=s.createContext(i);function o(t){const e=s.useContext(r);return s.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function c(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(i):t.components||i:o(t.components),s.createElement(r.Provider,{value:e},t.children)}}}]);